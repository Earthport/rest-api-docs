{
  "Name": "Earthport API",
  "BaseUri": "https://api-sandbox.earthport.com/v1",
  "ServerConfiguration": {
    "DefaultEnvironment": "sandbox",
    "DefaultServer": "default",
    "Environments": [
      {
        "Name": "production",
        "Description": "Production server.",
        "Servers": [
          {
            "Name": "default",
            "Url": "https://api.earthport.com/v1"
          },
          {
            "Name": "auth",
            "Url": "https://api.earthport.com"
          }
        ]
      },
      {
        "Name": "sandbox",
        "Description": "Sandbox is used for both sandbox testing and customer UAT.",
        "Servers": [
          {
            "Name": "default",
            "Url": "https://api-sandbox.earthport.com/v1"
          },
          {
            "Name": "auth",
            "Url": "https://api-sandbox.earthport.com"
          }
        ]
      },
      {
        "Name": "customer integration",
        "Description": "Customer integration is used by existing clients who need to test new functionality before it is released onto sandbox and production.",
        "Servers": [
          {
            "Name": "default",
            "Url": "https://api-integration.earthport.com/v1"
          },
          {
            "Name": "auth",
            "Url": "https://api-integration.earthport.com"
          }
        ]
      }
    ],
    "Parameters": []
  },
  "ImageUri": "",
  "Description": "This API supports all services required to make cross border payments using Earthport's network.",
  "Version": "1.0.0",
  "Contact": {
    "Name": "Earthport",
    "Url": "https://www.earthport.com",
    "Email": "support@earthport.com"
  },
  "AdditionalHeaders": [],
  "Authentication": {
    "Type": "OAuth_v2_BearerToken",
    "AuthType": "OAuth_v2_BearerToken",
    "Parameters": [],
    "AuthorizationUrl": "",
    "AccessTokenUrl": "",
    "OAuth2Server": "",
    "OAuth2AuthorizationServer": "",
    "AuthGrantTypes": [],
    "AuthScopes": [],
    "Scopes": [],
    "ParamFormats": {}
  },
  "Endpoints": [
    {
      "Name": "Get Beneficiary Bank Account",
      "Description": "Gets a Beneficiary Bank Account.",
      "HTTPMethod": "GET",
      "Group": "Beneficiary Bank Accounts",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts/{bankID}",
      "Response": {
        "Optional": false,
        "Type": "Beneficiary Bank Account Get Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\r\n  \"userID\": {\r\n    \"epUserID\": 3409890146942,\r\n    \"merchantUserID\": \"userID_1540303323210\"\r\n  },\r\n  \"benBankID\": {\r\n    \"epBankID\": 4034215,\r\n    \"merchantBankID\": \"bankID_1540304037951\"\r\n  },\r\n  \"beneficiaryIdentity\": {\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"ABC\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      }\r\n    }\r\n  },\r\n  \"description\": \"Mr J Smith current account\",\r\n  \"countryCode\": \"GB\",\r\n  \"currencyCode\": \"GBP\",\r\n  \"isActive\": true,\r\n  \"bankAccountDetails\": [\r\n    {\r\n      \"key\": \"bankName\",\r\n      \"value\": \"Test Bank\"\r\n    },\r\n    {\r\n      \"key\": \"accountName\",\r\n      \"value\": \"Mr J. Smith\"\r\n    },\r\n    {\r\n      \"key\": \"accountNumber\",\r\n      \"value\": \"06970093\"\r\n    },\r\n    {\r\n      \"key\": \"sortCode\",\r\n      \"value\": \"800554\"\r\n    },\r\n    {\r\n      \"key\": \"bic\",\r\n      \"value\": \"BOFSGB21377\"\r\n    }\r\n  ]\r\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Bank Accounts succesfully returned."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146942",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "4034215",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "bankID",
          "Description": "Unique ID for the beneficiary bank account. It can be either earthport id or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Indicative FX Quote",
      "Description": "Requests an  indicative quote. There are two exclusive scenarios when requesting a rate between two currencies:\n\n1. The caller provides a sell amount and is given the corresponding buy amount. In this case, the caller needs to populate the sellAmount and buyCurrency input parameters.\n\n2. The caller provides a buy amount and is given the corresponding sell amount. In this case, the caller needs to populate the buyAmount and sellCurrency input parameters.",
      "HTTPMethod": "POST",
      "Group": "Quotes",
      "RequiresAuthentication": true,
      "Route": "/quotes/indicative",
      "Response": {
        "Optional": false,
        "Type": "Quotes Indicative Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"fxDetail\": {\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyAmount\": {\n            \"currency\": \"GBP\",\n            \"amount\": 822.47\n        },\n        \"fxRate\": {\n            \"sellCurrency\": \"EUR\",\n            \"buyCurrency\": \"GBP\",\n            \"rate\": 1.21585\n        }\n    }\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Quote succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Quotes Indicative Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyCurrency\": \"GBP\",\n        \"serviceLevel\": \"standard\"\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The request details to get an indicative FX quote. You must either supply the sellAmount and buyCurrency. Or you must supply the buyAmount and sellCurrency.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Get Indicative FX Quote",
          "Description": "Requests an  indicative quote.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "body",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Validate Beneficiary Bank Account",
      "Description": "Vaidates a new beneficiary bank account against a User.",
      "HTTPMethod": "POST",
      "Group": "Beneficiary Bank Accounts",
      "RequiresAuthentication": true,
      "Route": "/bank-accounts",
      "Response": {
        "Optional": false,
        "Type": "Beneficiary Bank Account Validate Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"isBankAccountValid\": true\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Bank Account Valid."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Beneficiary Bank Account Validate Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\n    \"beneficiaryIdentity\": {\n      \"individualIdentity\": {\n        \"name\": {\n          \"familyName\": \"Smith\",\n          \"givenNames\": \"John\"\n        }\n      }\n    },\n    \"description\": \"Bank Account Description\",\n    \"countryCode\": \"GB\",\n    \"currencyCode\": \"GBP\",\n    \"bankAccountDetails\": [\n      {\n        \"key\": \"accountNumber\",\n        \"value\": \"06970093\"\n      },\n      {\n        \"key\": \"accountName\",\n        \"value\": \"account name\"\n      },\n      {\n        \"key\": \"bankName\",\n        \"value\": \"Test Bank\"\n      },\n      {\n        \"key\": \"sortCode\",\n        \"value\": \"800554\"\n      }\n    ]\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The beneficiary bank account.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Balance",
      "Description": "Retrieves the balance of a merchant account. \n\nThis API can be used to retrieve a set of balances represented by a monetary amount for each currency registered with the merchant's central virtual account. \n\nYou can filter the AccountBalance resource by currency if you require a balance for a specific currency. \nYou can also filter the AccountBalance on managedMerchantName. If no managedMerchantName is specified, then the caller will be used to identify which balance to return. If a managedMerchantName is specified, then an authorisation check will occur to ensure that the caller has the right to view the balance information for that managed merchant.",
      "HTTPMethod": "GET",
      "Group": "Balances",
      "RequiresAuthentication": true,
      "Route": "/balances",
      "Response": {
        "Optional": false,
        "Type": "AccountBalance",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "[\n    {\n        \"balance\": {\n            \"currency\": \"EUR\",\n            \"amount\": -299\n        },\n        \"balanceTimestamp\": \"2018-11-24T15:13:20.034+00:00\",\n        \"lastMovementTimestamp\": \"2018-11-16T10:28:14.179+00:00\"\n    },\n    {\n        \"balance\": {\n            \"currency\": \"GBP\",\n            \"amount\": -9720\n        },\n        \"balanceTimestamp\": \"2018-11-24T15:13:20.035+00:00\",\n        \"lastMovementTimestamp\": \"2018-11-24T11:49:24.313+00:00\"\n    },\n    {\n        \"balance\": {\n            \"currency\": \"USD\",\n            \"amount\": -55\n        },\n        \"balanceTimestamp\": \"2018-11-24T15:13:20.035+00:00\",\n        \"lastMovementTimestamp\": \"2018-10-23T17:13:22.155+00:00\"\n    }\n]",
        "Attributes": {},
        "Nullable": false,
        "IsArray": true,
        "IsMap": false,
        "Name": "response",
        "Description": "Balance succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchantName",
          "Description": "The name of a managed merchant registered on Earthport.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currency",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Get Balance",
          "Description": "Retrieves the balance of a merchant account.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "managedMerchantName",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "currency",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Settlement Calendar",
      "Description": "Retrieves the Settlement Calendar for payout.",
      "HTTPMethod": "GET",
      "Group": "Settlement Calendars",
      "RequiresAuthentication": true,
      "Route": "/settlement-calendars",
      "Response": {
        "Optional": false,
        "Type": "Settlement Calendars Get Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"responseTimeStamp\": \"2018-11-24T13:53:56.577+00:00\",\n    \"settlementCalendar\": [\n        {\n            \"submitBy\": \"2018-11-26T14:00:00.000+00:00\",\n            \"forValueOn\": \"2018-11-26Z\"\n        }\n    ]\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Settlement Calendar retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "FR",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryCountry",
          "Description": "Valid supported ISO 3166 2-character country code. Represents beneficiary country for the request",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "standard",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Service Level. Allowed values are standard and express.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "EUR",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryCurrency",
          "Description": "valid supported ISO 4217 3-character currency code. Represents beneficiary currency for the request.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutRequestCurrency",
          "Description": "valid supported ISO 4217 3-character currency code. Represents payout currency for the request.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "7",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "numberOfCalendarDays",
          "Description": "Represents number of days to be returned in the response. Default is 7.",
          "DefaultValue": "7"
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Get Settlement Calendar",
          "Description": "Retrieves the Settlement Calendar for payout.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "serviceLevel",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "beneficiaryCountry",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "beneficiaryCurrency",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "payoutRequestCurrency",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "numberOfCalendarDays",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Create FX Quote",
      "Description": "Requests an FX quote and creates a ticket for the quote. This ticket is honoured for a specified duration which is limited by Rate Expiry Date/Time. There are two exclusive scenarios when requesting a rate between two currencies:\n\n1. The caller provides a sell amount and is given the corresponding buy amount. In this case, the caller needs to populate the sellAmount and buyCurrency input parameters.\n\n2. The caller provides a buy amount and is given the corresponding sell amount. In this case, the caller needs to populate the buyAmount and sellCurrency input parameters.",
      "HTTPMethod": "POST",
      "Group": "Quotes",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts/{bankID}/quotes",
      "Response": {
        "Optional": false,
        "Type": "Quotes Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"fxTicketID\": 647229,\n    \"fxDetail\": {\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyAmount\": {\n            \"currency\": \"GBP\",\n            \"amount\": 822.47\n        },\n        \"fxRate\": {\n            \"sellCurrency\": \"EUR\",\n            \"buyCurrency\": \"GBP\",\n            \"rate\": 0.82247\n        }\n    }\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Quote succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146942",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "4034215",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "bankID",
          "Description": "Unique ID for the beneficiary bank account. It can be either earthport id or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Quotes Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": " {\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyCurrency\": \"GBP\",\n        \"serviceLevel\": \"standard\"\n\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The request details to get an FX quote and receive a unique Ticket ID with a time to live.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Cancel Transaction",
      "Description": "Cancels a Transaction (payout instruction) which is in a cancellable state in Earthport’s Payments Service.",
      "HTTPMethod": "DELETE",
      "Group": "Transactions",
      "RequiresAuthentication": true,
      "Route": "/transactions/{transactionID}",
      "Response": {
        "Optional": false,
        "Type": "Transactions Cancel Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"status\": \"PendingCancellation\",\n    \"statusDescription\": \"Cancellation Request received for a transaction that cannot be cancelled immediately. A refund notification will be issued if and when this transaction is successfully cancelled\",\n    \"timestamp\": \"2018-11-24T14:08:52.985+00:00\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Transaction succesfully Cancelled."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "281474988434819",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "A unique transaction ID. You can use earthport transaction id or merchant transaction reference.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "12345",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantCancellationReqID",
          "Description": "The ID provided by the merchant that will uniquely identify this cancellation request.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Create Bulk FX Quote",
      "Description": "Requests a bulk FX quote and creates a ticket for the quote. This ticket is honoured for a specified duration which is limited by Rate Expiry Date/Time.",
      "HTTPMethod": "POST",
      "Group": "Quotes",
      "RequiresAuthentication": true,
      "Route": "/quotes/bulk",
      "Response": {
        "Optional": false,
        "Type": "Quotes Bulk Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"fxTicketID\": 647228,\n    \"expiryTimestamp\": \"2018-11-24T14:46:02.492+00:00\",\n    \"bulkFXDetail\": [\n        {\n            \"sellCurrency\": \"EUR\",\n            \"buyCountry\": \"GB\",\n            \"buyCurrency\": \"GBP\",\n            \"serviceLevel\": \"standard\",\n            \"buyFxRate\": 0.82247,\n            \"sellFxRate\": 1.21585\n        },\n        {\n            \"sellCurrency\": \"USD\",\n            \"buyCountry\": \"GB\",\n            \"buyCurrency\": \"GBP\",\n            \"serviceLevel\": \"standard\",\n            \"buyFxRate\": 0.741831,\n            \"sellFxRate\": 1.348016\n        },\n        {\n            \"sellCurrency\": \"AUD\",\n            \"buyCountry\": \"GB\",\n            \"buyCurrency\": \"GBP\",\n            \"serviceLevel\": \"standard\",\n            \"buyFxRate\": 0.565164,\n            \"sellFxRate\": 1.769399\n        }\n    ]\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Quote succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Quotes Bulk Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "[\r\n{\r\n\"sellCurrency\":\"EUR\",\r\n\"buyCountry\":\"GB\",\r\n\"buyCurrency\":\"GBP\",\r\n\"serviceLevel\":\"standard\"\r\n},\r\n{\r\n\"sellCurrency\":\"USD\",\r\n\"buyCountry\":\"GB\",\r\n\"buyCurrency\":\"GBP\",\r\n\"serviceLevel\":\"standard\"\r\n},\r\n{\r\n\"sellCurrency\":\"AUD\",\r\n\"buyCountry\":\"GB\",\r\n\"buyCurrency\":\"GBP\",\r\n\"serviceLevel\":\"standard\"\r\n}\r\n]",
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "body",
          "Description": "Bulk FX Quote Request.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Create Bulk FX Quote",
          "Description": "Requests a bulk FX quote and creates a ticket for the quote.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "body",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Create Payment Registered Beneficiary",
      "Description": "Creates a new payment for a previously registered beneficiary bank account (and user).",
      "HTTPMethod": "POST",
      "Group": "Payments",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts/{bankID}/payments",
      "Response": {
        "Optional": false,
        "Type": "Payments RegisteredBeneficiary Create Respone",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474984546300,\n        \"merchantTransactionID\": \"txID_1543152891155\"\n    },\n    \"correspondentChargesExpected\": false,\n    \"liquidityValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"settlementValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"acceptedDate\": \"2018-11-25T13:34:51.647+00:00\",\n    \"expectedSettlementDate\": \"2018-11-26Z\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Payment succesfully created."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146942",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "4034215",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "bankID",
          "Description": "Unique ID for the beneficiary bank account. It can be either earthport id or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Payments RegisteredBeneficiary Create Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "CreatePaymentRegisteredBeneficiaryRequest.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Deactivate Beneficiary Bank Account",
      "Description": "Deactivates a Beneficiary Bank Account. You will not be able to send a payment to a deactivated bank account.",
      "HTTPMethod": "DELETE",
      "Group": "Beneficiary Bank Accounts",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts/{bankID}",
      "Response": {
        "Optional": false,
        "Type": "Void",
        "IsSdlNativeType": true,
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Bank Accounts succesfully deactivated."
      },
      "ResponseCode": 204,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3430090151590",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "7431798",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "bankID",
          "Description": "Unique ID for the beneficiary bank account. It can be either earthport id or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Create Beneficiary Bank Account.",
      "Description": "Registers a new beneficiary bank account against this User.",
      "HTTPMethod": "POST",
      "Group": "Beneficiary Bank Accounts",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts",
      "Response": {
        "Optional": false,
        "Type": "UsersBankID",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\r\n  \"userID\": {\r\n    \"epUserID\": 3430090151617,\r\n    \"merchantUserID\": \"userID_1542991954199\"\r\n  },\r\n  \"benBankID\": {\r\n    \"epBankID\": 4036783,\r\n    \"merchantBankID\": \"bnk_12345678\"\r\n  }\r\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Bank Account succesfully created."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3430090151617",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Beneficiary Bank Account Create Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The beneficiary bank account.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Add DepositReference",
      "Description": "Creates a deposit reference for a User. This deposit reference is unique and each merchant has their own prefix.",
      "HTTPMethod": "POST",
      "Group": "Users",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/deposit-references",
      "Response": {
        "Optional": false,
        "Type": "Void",
        "IsSdlNativeType": true,
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Deposit Reference Created."
      },
      "ResponseCode": 204,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146978",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Users Deposit References Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "Request object to add a deposit reference.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Expected Settlement Date",
      "Description": "Validates a new beneficiary bank account and gets the expected settlement date.",
      "HTTPMethod": "POST",
      "Group": "Beneficiary Bank Accounts",
      "RequiresAuthentication": true,
      "Route": "/bank-accounts/expected-settlement",
      "Response": {
        "Optional": false,
        "Type": "Bank Account Expected Settlement Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"isBankAccountValid\": true,\n    \"anticipatedPayoutRequestTime\": \"2018-12-14T23:00:00+00:00\",\n    \"serviceLevel\": \"standard\",\n    \"expectedSettlementDate\": \"2018-12-17Z\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Bank Account Valid."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Bank Account Expected Settlement Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The beneficiary bank account.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Disable User",
      "Description": "Disables a User - you cannot register new bank accounts against a disabled User or create payments for a disabled User.",
      "HTTPMethod": "DELETE",
      "Group": "Users",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}",
      "Response": {
        "Optional": false,
        "Type": "Void",
        "IsSdlNativeType": true,
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "User succesfully disabled."
      },
      "ResponseCode": 204,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146978",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Update User",
      "Description": "Updates a User/Payer. This API only supports updating the identity details of a User/Payer.",
      "HTTPMethod": "PUT",
      "Group": "Users",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}",
      "Response": {
        "Optional": false,
        "Type": "Void",
        "IsSdlNativeType": true,
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "User succesfully updated."
      },
      "ResponseCode": 204,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146942",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Users Update Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n  \"payerIdentity\": {\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"Birmingham\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      },\r\n      \"birthInformation\": {\r\n        \"cityOfBirth\": \"Manchester\",\r\n        \"countryOfBirth\": \"GB\",\r\n        \"dateOfBirth\": \"2001-01-01\"\r\n      },\r\n      \"identification\": [\r\n        {\r\n          \"idType\": \"Passport\",\r\n          \"identificationCountry\": \"GB\",\r\n          \"identificationNumber\": \"ABC123\",\r\n          \"validFromDate\": \"2001-01-01\",\r\n          \"validToDate\": \"2010-01-01\"\r\n        }\r\n      ]\r\n    },\r\n    \"additionalData\": [\r\n      {\r\n        \"Key\": \"NATIONAL_ID_CARD\",\r\n        \"Value\": \"TT6789CC\"\r\n      }\r\n    ]\r\n  }\r\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The user.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get User",
      "Description": "Get a User/Payer. This API only returns the identity details of a User/Payer.",
      "HTTPMethod": "GET",
      "Group": "Users",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}",
      "Response": {
        "Optional": false,
        "Type": "Users Get Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"userID\": {\n        \"epUserID\": 3409890146942,\n        \"merchantUserID\": \"userID_1540303323210\"\n    },\n    \"payerIdentity\": {\n        \"individualIdentity\": {\n            \"name\": {\n                \"familyName\": \"Smith\",\n                \"givenNames\": \"John\"\n            },\n            \"address\": {\n                \"addressLine1\": \"ABC\",\n                \"addressLine2\": \"ABC\",\n                \"addressLine3\": \"ABC\",\n                \"city\": \"ABC\",\n                \"country\": \"GB\",\n                \"postcode\": \"EC1A 4HY\",\n                \"province\": \"ABC\"\n            },\n            \"birthInformation\": {\n                \"cityOfBirth\": \"ABC\",\n                \"countryOfBirth\": \"GB\",\n                \"dateOfBirth\": \"2001-01-01Z\"\n            },\n            \"identification\": [\n                {\n                    \"idType\": \"Passport\",\n                    \"identificationCountry\": \"GB\",\n                    \"identificationNumber\": \"ABC123\",\n                    \"validFromDate\": \"2001-01-01Z\",\n                    \"validToDate\": \"2001-01-01Z\"\n                }\n            ]\n        },\n        \"additionalData\": [\n            {\n                \"Key\": \"NATIONAL_ID_CARD\",\n                \"Value\": \"TT6789CC\"\n            }\n        ]\n    },\n    \"createdDate\": \"2011-07-14\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "User succesfully returned."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146942",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Transaction",
      "Description": "Retrieves a single Transaction based on TransactionID.",
      "HTTPMethod": "GET",
      "Group": "Transactions",
      "RequiresAuthentication": true,
      "Route": "/transactions/{transactionID}",
      "Response": {
        "Optional": false,
        "Type": "FinancialTransaction",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474984525097,\n        \"merchantTransactionID\": \"txID_1538474668029\"\n    },\n    \"timestamp\": \"2018-10-02T10:04:29.338+00:00\",\n    \"transactionType\": \"Payout\",\n    \"transactionStatus\": {\n        \"code\": 100,\n        \"description\": \"Pending Processing\"\n    },\n    \"amount\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"movementType\": \"Debit\",\n    \"usersBankID\": {\n        \"userID\": {\n            \"epUserID\": 3409890146710,\n            \"merchantUserID\": \"userID_1538473974001\"\n        },\n        \"benBankID\": {\n            \"epBankID\": 4024363,\n            \"merchantBankID\": \"bankID_1538474577593\"\n        }\n    },\n    \"payoutRequestAmount\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"settlementInstructionAmount\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"beneficiaryStatementNarrative\": \"Free Text Description\",\n    \"payoutDetails\": [\n        {\n            \"Key\": \"K1\",\n            \"Value\": \"V1\"\n        },\n        {\n            \"Key\": \"K2\",\n            \"Value\": \"V2\"\n        }\n    ],\n    \"expectedSettlementDate\": \"2018-11-26Z\",\n    \"beneficiaryBankCountry\": \"GB\",\n    \"beneficiaryBankCurrency\": \"GBP\",\n    \"debitValueDate\": \"2018-10-02T10:04:29.338+00:00\",\n    \"payerIdentity\": {\n        \"individualIdentity\": {\n            \"name\": {\n                \"familyName\": \"Smith\",\n                \"givenNames\": \"John\"\n            },\n            \"address\": {\n                \"addressLine1\": \"ABC\",\n                \"addressLine2\": \"ABC\",\n                \"addressLine3\": \"ABC\",\n                \"city\": \"ABC\",\n                \"country\": \"GB\",\n                \"postcode\": \"EC1A 4HY\",\n                \"province\": \"ABC\"\n            },\n            \"birthInformation\": {\n                \"cityOfBirth\": \"ABC\",\n                \"countryOfBirth\": \"GB\",\n                \"dateOfBirth\": \"2001-01-01Z\"\n            },\n            \"identification\": [\n                {\n                    \"idType\": \"Passport\",\n                    \"identificationCountry\": \"GB\",\n                    \"identificationNumber\": \"ABC123\",\n                    \"validFromDate\": \"2001-01-01Z\",\n                    \"validToDate\": \"2001-01-01Z\"\n                }\n            ]\n        },\n        \"additionalData\": [\n            {\n                \"Key\": \"NATIONAL_ID_CARD\",\n                \"Value\": \"TT6789CC\"\n            }\n        ]\n    },\n    \"payerCreatedDate\": \"2018-10-02Z\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Transaction succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "281474984525097",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "A unique transaction ID. You can use earthport transaction id or merchant transaction reference.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchantName",
          "Description": "The name of the managed merchant who created or owns the transaction. Do not supply if you either do not have any managed merchants configured or the managed merchant did not create this transaction. If this is not supplied and the managed merchant did create this transaction then you will receive a \"Validation failure: Financial Transaction not found\" error, even though the transaction does exist.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Create User",
      "Description": "Registers a new user for the client. A User is responsible for registering the beneficiary bank account to which a payment is sent to. This normally means the User is the Payer.",
      "HTTPMethod": "POST",
      "Group": "Users",
      "RequiresAuthentication": true,
      "Route": "/users",
      "Response": {
        "Optional": false,
        "Type": "UserID",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"epUserID\": 3409890147404,\n    \"merchantUserID\": \"abcd1234567\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "User succesfully created."
      },
      "ResponseCode": 204,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Users Create or Validate Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The user details to either be created.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Create or Validate User",
          "Description": "Registers a new user for the client. A User is responsible for registering the beneficiary bank account to which a payment is sent to. This normally means the User is the Payer. You can also use this API to validate the payer identity details of the User by supplying the optional request parameter action=validate.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "body",
              "Value": ""
            }
          ],
          "ExpectedStatus": "204",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Access Token",
      "Description": "Verify client credentials and returns a bearer token.",
      "HTTPMethod": "POST",
      "Group": "Authentication",
      "RequiresAuthentication": false,
      "Server": "auth",
      "Route": "/oauth/token",
      "Response": {
        "Optional": false,
        "Type": "AccessTokenResponse",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"token_type\": \"BearerToken\",\n    \"issued_at\": \"1543070211759\",\n    \"access_token\": \"8mYaXTpV3kNz0TXypU4rEkVdZqMH\",\n    \"expires_in\": \"2999\",\n    \"status\": \"approved\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Access token generated."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Form",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "YOUR_CLIENT_ID",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "client_id",
          "Description": "Client ID.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Form",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "YOUR_SECRET",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "client_secret",
          "Description": "Client Secret.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "GrantType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "grant_type",
          "Description": "The grant type for OAuth2.0.",
          "DefaultValue": "client_credentials"
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect."
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Create Payment",
      "Description": "This service creates a payment without the need to pre-register either the User or Beneficiary Bank Account.\n\nCreates a User (or updates an existing User), adds a Beneficiary Bank Account to this user and creates a new payment.",
      "HTTPMethod": "POST",
      "Group": "Payments",
      "RequiresAuthentication": true,
      "Route": "/payments",
      "Response": {
        "Optional": false,
        "Type": "Payments Create Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"userID\": {\n        \"epUserID\": 3409890147399,\n        \"merchantUserID\": \"userID_1543060156380\"\n    },\n    \"benBankID\": {\n        \"epBankID\": 4036790,\n        \"merchantBankID\": \"bankID_1543060156380\"\n    },\n    \"transactionID\": {\n        \"epTransactionID\": 281474984546286,\n        \"merchantTransactionID\": \"txID_1543060156380\"\n    },\n    \"liquidityValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"settlementValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"acceptedDate\": \"2018-11-24T11:49:24.313+00:00\",\n    \"expectedSettlementDate\": \"2018-11-26Z\"\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Payment succesfully created."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Payments Create Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\n\t\"user\":{\n  \"userID\": {\"merchantUserID\": \"userID_12345\"},\n  \"accountCurrency\": \"any\",\n  \"payerIdentity\": {\n    \"individualIdentity\": {\n      \"name\": {\n        \"familyName\": \"Smith\",\n        \"givenNames\": \"John\"\n      },\n      \"address\": {\n        \"addressLine1\": \"ABC\",\n        \"addressLine2\": \"ABC\",\n        \"addressLine3\": \"ABC\",\n        \"city\": \"ABC\",\n        \"country\": \"GB\",\n        \"postcode\": \"EC1A 4HY\",\n        \"province\": \"ABC\"\n      }\n    }\n  }\n},\n\"bankAccount\": {\n  \"benBankID\":{ \"merchantBankID\": \"bankID_9876\"},\n    \"beneficiaryIdentity\": {\n      \"individualIdentity\": {\n        \"name\": {\n          \"familyName\": \"Smith\",\n          \"givenNames\": \"John\"\n        }\n      }\n    },\n    \"description\": \"Mr J Smith current account\",\n    \"countryCode\": \"GB\",\n    \"currencyCode\": \"GBP\",\n    \"bankAccountDetails\": [\n      {\n        \"key\": \"accountNumber\",\n        \"value\": \"06970093\"\n      },\n      {\n        \"key\": \"accountName\",\n        \"value\": \"account name\"\n      },\n      {\n        \"key\": \"bankName\",\n        \"value\": \"Test Bank\"\n      },\n      {\n        \"key\": \"sortCode\",\n        \"value\": \"800554\"\n      }\n    ]\n},\n\"payment\": {\n\t\"transactionID\": {\n\t\t\"merchantTransactionID\": \"txID_123456\"\n\t},\n\t\"payoutRequestAmount\": {\n\t\t\"amount\": 11,\n\t\t\"currency\": \"GBP\"\n\t},\n\t\"beneficiaryAmountInformation\": {\n\t\t\"beneficiaryAmount\": {\n\t\t\t\"amount\": 11,\n\t\t\t\"currency\": \"GBP\"\n\t\t},\n\t\t\"payoutCurrency\": \"GBP\"\n\t},\n\t\"serviceLevel\": \"standard\",\n\t\"beneficiaryStatementNarrative\": \"Expenses payment\",\n\t\"payerType\": \"user\"\n}\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The payment request.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Create Payment",
          "Description": "Creates a User (or updates an existing User), adds a Beneficiary Bank Account to this user and creates a new payment.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "body",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "List Bank Accounts",
      "Description": "Gets all Beneficiary Bank Accounts registered by this User.",
      "HTTPMethod": "GET",
      "Group": "Beneficiary Bank Accounts",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts",
      "Response": {
        "Optional": false,
        "Type": "Beneficiary Bank Account List Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"beneficiaryBankAccountSummary\": [\n        {\n            \"benBankID\": {\n                \"epBankID\": 4036783,\n                \"merchantBankID\": \"bankID_1542991974172\"\n            },\n            \"description\": \"Bank Account Description\",\n            \"countryCode\": \"GB\",\n            \"bankAccountDetails\": [\n                {\n                    \"key\": \"bankName\",\n                    \"value\": \"Test Bank\"\n                },\n                {\n                    \"key\": \"accountName\",\n                    \"value\": \"account name\"\n                },\n                {\n                    \"key\": \"currencyCode\",\n                    \"value\": \"GBP\"\n                },\n                {\n                    \"key\": \"accountNumber\",\n                    \"value\": \"****0093\"\n                }\n            ],\n            \"status\": \"ACTIVE\"\n        }\n    ],\n    \"userID\": {\n        \"epUserID\": 3409890147363,\n        \"merchantUserID\": \"userID_1542991954199\"\n    },\n    \"paginationResult\": {\n        \"offset\": 0,\n        \"pageSize\": 25,\n        \"totalNumberOfRecords\": 1\n    }\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Bank Accounts succesfully returned."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890147363",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "offset",
          "Description": "This is used for pagination of resultsets. 0-based starting offset of the page with respect to the entire resultset.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "pageSize",
          "Description": "This is used for pagination of resultsets. Number of items per page to return. If empty the maximum allowable (25) number of records will be returned.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Statement",
      "Description": "Retrieves a list of financial transactions and balances for a specified time period for an account administered in the Earthport Payment system. To retrieve a particular statement the startDate, endDateTime and currency of the account must be specified. The statement returned will contain transactions that occurred since the start of the startDate up to and including endDateTime. If the account (in the requested currency) does not contain any transactions for the period an empty statement is returned. Every transaction, together with the money movement it represents (debit or credit) and its resulting account balance are represented as a statement line item. There will be a number of statement line items (up to the maximum page size) per page with an opening and closing balance for that page. Currently the following transaction types may show up on a statement:\n\n Payout transaction,\n Refund transaction,\n User deposit,\n Liquidity deposit,\n Journal transaction,\n Merchant liquidity movement,\n Earthport Merchant Liquidity Transfer\n\nThe operation supports sorting (by date) by specifying a sort order (ASC or DESC) and paging across multiple pages of results.",
      "HTTPMethod": "GET",
      "Group": "Statements",
      "RequiresAuthentication": true,
      "Route": "/statements",
      "Response": {
        "Optional": false,
        "Type": "Statement",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"statementLineItems\": [\n        {\n            \"transaction\": {\n                \"transactionID\": {\n                    \"epTransactionID\": 281474984525095\n                },\n                \"timestamp\": \"2018-10-02T08:58:23.661+00:00\",\n                \"transactionType\": \"Payout\",\n                \"transactionStatus\": {\n                    \"code\": 100,\n                    \"description\": \"Pending Processing\"\n                },\n                \"amount\": {\n                    \"currency\": \"GBP\",\n                    \"amount\": 11\n                },\n                \"movementType\": \"Debit\",\n                \"usersBankId\": {\n                    \"userID\": {\n                        \"epUserID\": 3409890146681,\n                        \"merchantUserID\": \"userID_1538470668310\"\n                    },\n                    \"benBankID\": {\n                        \"epBankID\": 4024349\n                    }\n                }\n            },\n            \"balance\": -38\n        },\n        {\n            \"transaction\": {\n                \"transactionID\": {\n                    \"epTransactionID\": 281474984525097\n                },\n                \"timestamp\": \"2018-10-02T10:04:29.338+00:00\",\n                \"transactionType\": \"Payout\",\n                \"transactionStatus\": {\n                    \"code\": 100,\n                    \"description\": \"Pending Processing\"\n                },\n                \"amount\": {\n                    \"currency\": \"GBP\",\n                    \"amount\": 11\n                },\n                \"movementType\": \"Debit\",\n                \"usersBankId\": {\n                    \"userID\": {\n                        \"epUserID\": 3409890146710,\n                        \"merchantUserID\": \"userID_1538473974001\"\n                    },\n                    \"benBankID\": {\n                        \"epBankID\": 4024363,\n                        \"merchantBankID\": \"bankID_1538474577593\"\n                    }\n                }\n            },\n            \"balance\": -49\n        },\n        {\n            \"transaction\": {\n                \"transactionID\": {\n                    \"epTransactionID\": 281474984542620\n                },\n                \"timestamp\": \"2018-10-17T15:20:28.580+00:00\",\n                \"transactionType\": \"Payout\",\n                \"transactionStatus\": {\n                    \"code\": 100,\n                    \"description\": \"Pending Processing\"\n                },\n                \"amount\": {\n                    \"currency\": \"GBP\",\n                    \"amount\": 11\n                },\n                \"movementType\": \"Debit\",\n                \"usersBankId\": {\n                    \"userID\": {\n                        \"epUserID\": 3409890146813,\n                        \"merchantUserID\": \"userID_1539789626198\"\n                    },\n                    \"benBankID\": {\n                        \"epBankID\": 4033915,\n                        \"merchantBankID\": \"bankID_1539789626198\"\n                    }\n                }\n            },\n            \"balance\": -60\n        }\n    ],\n    \"paginationResult\": {\n        \"offset\": 2,\n        \"pageSize\": 3,\n        \"totalNumberOfRecords\": 64\n    },\n    \"openingBalance\": {\n        \"balance\": {\n            \"amount\": -27,\n            \"currency\": \"GBP\"\n        },\n        \"balanceTimestamp\": \"2018-11-24T14:04:12.207+00:00\"\n    },\n    \"closingBalance\": {\n        \"balance\": {\n            \"amount\": -60,\n            \"currency\": \"GBP\"\n        },\n        \"balanceTimestamp\": \"2018-11-24T14:04:12.207+00:00\"\n    }\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Statement succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currency",
          "Description": "Valid supported ISO 4217 3-character currency code. The currency code representing currency of the user or merchant account.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2018-01-01T00:00:47Z",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "startDateTime",
          "Description": "Valid ISO 8601 timestamp, i.e. yyyyy-MM-ddTHH:mm:ssZ. The start day of the statement period. All transactions from the start of the day are included.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2018-12-01T00:00:47Z",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "endDateTime",
          "Description": "Valid ISO 8601 timestamp, i.e. yyyyy-MM-ddTHH:mm:ssZ. The end day timestamp of the statement period. If this is now or null the statement will include all transactions up to the current point in time.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "SortOrder",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sortOrder",
          "Description": "Sort by transaction date in either Ascending or Descending order.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchantName",
          "Description": "Managed merchant whose transactions will be returned  when being called by the contracting merchant.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "offset",
          "Description": "This is used for pagination of resultsets. 0-based starting offset of the page with respect to the entire resultset.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "pageSize",
          "Description": "This is used for pagination of resultsets. Number of items per page to return. If empty the maximum allowable (25) number of records will be returned.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Get Statement",
          "Description": "Retrieves the statement of transactions for a merchant account. This lists all debits and credits against this account. The results are paginated so may only be showing a subset of the total number of transactions.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "managedMerchantName",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "currency",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "startDateTime",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "endDateTime",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "sortOrder",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "offset",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "pageSize",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Search Transactions",
      "Description": "This allows you to search for payments where you don't know the UID (paymentID) and also allows you to search for other financial transaction types on your account such as refunds, deposits (See Transaction Type). \n\nThis API supports sorting by \"Timestamp\" or \"Amount\" in a particular sort order (ASC or DESC) as well as paging across multiple pages of results.",
      "HTTPMethod": "GET",
      "Group": "Transactions",
      "RequiresAuthentication": true,
      "Route": "/transactions",
      "Response": {
        "Optional": false,
        "Type": "Transactions Search Response",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"transactions\": [\n        {\n            \"transactionID\": {\n                \"epTransactionID\": 281474984546286,\n                \"merchantTransactionID\": \"txID_1543060156380\"\n            },\n            \"timestamp\": \"2018-11-24T11:49:24.313+00:00\",\n            \"transactionType\": \"Payout\",\n            \"transactionStatus\": {\n                \"code\": 100,\n                \"description\": \"Pending Processing\"\n            },\n            \"amount\": {\n                \"currency\": \"GBP\",\n                \"amount\": 11\n            },\n            \"movementType\": \"Debit\",\n            \"usersBankId\": {\n                \"userID\": {\n                    \"epUserID\": 3409890147399,\n                    \"merchantUserID\": \"userID_1543060156380\"\n                },\n                \"benBankID\": {\n                    \"epBankID\": 4036790,\n                    \"merchantBankID\": \"bankID_1543060156380\"\n                }\n            }\n        },\n        {\n            \"transactionID\": {\n                \"epTransactionID\": 281474984546285,\n                \"merchantTransactionID\": \"txID_1543060145826\"\n            },\n            \"timestamp\": \"2018-11-24T11:49:06.923+00:00\",\n            \"transactionType\": \"Payout\",\n            \"transactionStatus\": {\n                \"code\": 100,\n                \"description\": \"Pending Processing\"\n            },\n            \"amount\": {\n                \"currency\": \"GBP\",\n                \"amount\": 11\n            },\n            \"movementType\": \"Debit\",\n            \"usersBankId\": {\n                \"userID\": {\n                    \"epUserID\": 3409890147387,\n                    \"merchantUserID\": \"userID_1543060145826\"\n                },\n                \"benBankID\": {\n                    \"epBankID\": 4036789,\n                    \"merchantBankID\": \"bankID_1543060145826\"\n                }\n            }\n        },\n        {\n            \"transactionID\": {\n                \"epTransactionID\": 281474984546284,\n                \"merchantTransactionID\": \"txID_1543060127008\"\n            },\n            \"timestamp\": \"2018-11-24T11:48:49.644+00:00\",\n            \"transactionType\": \"Payout\",\n            \"transactionStatus\": {\n                \"code\": 100,\n                \"description\": \"Pending Processing\"\n            },\n            \"amount\": {\n                \"currency\": \"GBP\",\n                \"amount\": 11\n            },\n            \"movementType\": \"Debit\",\n            \"usersBankId\": {\n                \"userID\": {\n                    \"epUserID\": 3409890147375,\n                    \"merchantUserID\": \"userID_1543060127008\"\n                },\n                \"benBankID\": {\n                    \"epBankID\": 4036788,\n                    \"merchantBankID\": \"bankID_1543060127008\"\n                }\n            }\n        },\n        {\n            \"transactionID\": {\n                \"epTransactionID\": 281474984546283,\n                \"merchantTransactionID\": \"txID_1543059648037\"\n            },\n            \"timestamp\": \"2018-11-24T11:40:55.853+00:00\",\n            \"transactionType\": \"Payout\",\n            \"transactionStatus\": {\n                \"code\": 100,\n                \"description\": \"Pending Processing\"\n            },\n            \"amount\": {\n                \"currency\": \"GBP\",\n                \"amount\": 11\n            },\n            \"movementType\": \"Debit\",\n            \"usersBankId\": {\n                \"userID\": {\n                    \"epUserID\": 3409890146942,\n                    \"merchantUserID\": \"userID_1540303323210\"\n                },\n                \"benBankID\": {\n                    \"epBankID\": 4034215,\n                    \"merchantBankID\": \"bankID_1540304037951\"\n                }\n            }\n        },\n        {\n            \"transactionID\": {\n                \"epTransactionID\": 281474984546282,\n                \"merchantTransactionID\": \"txID_1543059637509\"\n            },\n            \"timestamp\": \"2018-11-24T11:40:38.674+00:00\",\n            \"transactionType\": \"Payout\",\n            \"transactionStatus\": {\n                \"code\": 100,\n                \"description\": \"Pending Processing\"\n            },\n            \"amount\": {\n                \"currency\": \"GBP\",\n                \"amount\": 11\n            },\n            \"movementType\": \"Debit\",\n            \"usersBankId\": {\n                \"userID\": {\n                    \"epUserID\": 3409890146942,\n                    \"merchantUserID\": \"userID_1540303323210\"\n                },\n                \"benBankID\": {\n                    \"epBankID\": 4034215,\n                    \"merchantBankID\": \"bankID_1540304037951\"\n                }\n            }\n        }\n    ],\n    \"paginationResult\": {\n        \"offset\": 0,\n        \"pageSize\": 5,\n        \"totalNumberOfRecords\": 48\n    }\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Transaction succesfully retrieved."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2018-01-01T07:36:28",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "startDateTime",
          "Description": "Start Date Time in yyyyy-MM-ddTHH:mm:ssZ.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "endDateTime",
          "Description": "End Date Time in yyyyy-MM-ddTHH:mm:ssZ.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "SortOrder",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sortOrder",
          "Description": "Sort in either ascending or descending order.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "sortFields",
          "Description": "Sort Fields. It can be either Timestamp or Amount or a combination of both. If you want to sort the results based on both the sort fields please provide a comma seperated list of sort fields, i.e. Timestamp,Amount",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchantName",
          "Description": "Managed merchant whose transactions will be returned  when being called by the contracting merchant.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currency",
          "Description": "Transaction currency (valid supported ISO 4217 3-character currency code).",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "0",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amountFrom",
          "Description": "Decimal amount value. The number of decimal places is defined by the currency.This is the lower limit of transaction value (inclusive).",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "50",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amountTo",
          "Description": "Decimal amount value. The number of decimal places is defined by the currency.This is the upper limit of transaction value (inclusive).",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantTransactionID",
          "Description": "Merchant assigned transaction ID (transaction reference).",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "TransactionType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionType",
          "Description": "Type of financial transactions. Please provide one of the following transaction types (if none specified all types are searched): Payout, Refund, User Deposit, Merchant Liquidity Deposit, Journal, Merchant Liquidity Movement, Earthport Merchant Liquidity Transfer",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionStatusCode",
          "Description": "Status Code of the Transactions.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "0",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "offset",
          "Description": "This is used for pagination of resultsets. 0-based starting offset of the page with respect to the entire resultset.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "pageSize",
          "Description": "This is used for pagination of resultsets. Number of items per page to return. If empty the maximum allowable (25) number of records will be returned.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Search Transactions",
          "Description": "This allows you to search for payments where you don't know the UID (paymentID) and also allows you to search for other financial transaction types on your account such as refunds, deposits (See Transaction Type).",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": true,
              "Name": "managedMerchantName",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "currency",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "startDateTime",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "endDateTime",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "amountFrom",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "amountTo",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "sortOrder",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "sortFields",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "merchantTransactionID",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "transactionType",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "transactionStatusCode",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "offset",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "pageSize",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Purpose of Payment Metadata",
      "Description": "Returns Purpose of Payment metadata for a payment to a beneficiary bank account which has previously been registered.",
      "HTTPMethod": "GET",
      "Group": "Payments",
      "RequiresAuthentication": true,
      "Route": "/users/{userID}/bank-accounts/{bankID}/payments/meta",
      "Response": {
        "Optional": false,
        "Type": "GetPayoutRequiredDataResponse",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\r\n    \"purposeOfPaymentFieldGroupsList\": {\r\n        \"mandatory\": true,\r\n        \"purposeOfPaymentCode\": [\r\n            {\r\n                \"code\": \"MOR\",\r\n                \"description\": \"Mortgage\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"TAX\",\r\n                \"description\": \"Tax\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"MIS\",\r\n                \"description\": \"Miscellaneous\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"SAL\",\r\n                \"description\": \"Salary/payroll\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"LOA\",\r\n                \"description\": \"Loan\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"RLS\",\r\n                \"description\": \"Rent or Lease\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"BUS\",\r\n                \"description\": \"Business/commercial payment\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"DEP\",\r\n                \"description\": \"Deposit\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"REM\",\r\n                \"description\": \"Remittance\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"ANN\",\r\n                \"description\": \"Annuity\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"code\": \"PEN\",\r\n                \"description\": \"Pension\",\r\n                \"purposeOfPaymentUsageRestrictions\": {\r\n                    \"originatorType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    },\r\n                    \"beneficiaryType\": {\r\n                        \"individual\": true,\r\n                        \"legalEntity\": true\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Payment metadata succesfully returned."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3409890146942",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "The payer's unique id. It can be either VAN or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Template",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "4034221",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "bankID",
          "Description": "Unique ID for the beneficiary bank account. It can be either earthport id or merchant id.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "idType for the path parameters. This allows you to specify either your own UIDs or Earthport generated UIDs. The Earthport generated UIDs will be used by default.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "500",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amount",
          "Description": "Decimal amount value. The number of decimal places is defined by the currency.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "USD",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currency",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "user",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerType",
          "Description": "The type of Payer. Allowed values are authenticatedCaller, managedMerchant and user.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "standard",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Service Level. Allowed values are standard and express.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Validate User",
      "Description": "Use this API to validate the payer identity details of the User.",
      "HTTPMethod": "POST",
      "Group": "Users",
      "RequiresAuthentication": true,
      "Route": "/users",
      "Response": {
        "Optional": false,
        "Type": "Void",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response"
      },
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "Constant": true,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "validate",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "action",
          "Description": "This determines that the supplied User should be validated only and not persisted.",
          "DefaultValue": "validate"
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryCountryCode",
          "Description": "Valid supported ISO 3166 2-character country code for the payer being validated. This is the country, which the payer needs to send a payment to.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Body",
          "Optional": false,
          "Type": "Users Create or Validate Request",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "body",
          "Description": "The user details to either be created.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token.",
          "ErrorTypeName": ""
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform.",
          "ErrorTypeName": ""
        }
      ],
      "TestCases": [],
      "WrapBodyInObject": false
    },
    {
      "Name": "Get Metadata for Payment Request",
      "Description": "Returns the required fields for creating the payment request.",
      "HTTPMethod": "GET",
      "Group": "Payments",
      "RequiresAuthentication": true,
      "Route": "/payments/meta",
      "Response": {
        "Optional": false,
        "Type": "GetPayoutRequiredDataResponse",
        "Constant": false,
        "IsStream": false,
        "IsAttribute": false,
        "Example": "{\n    \"beneficiaryIdentityFieldGroupsList\": {\n        \"groupLabel\": \"Individual Identity\",\n        \"beneficiaryIdentityFieldGroup\": [\n            {\n                \"elementName\": \"name\",\n                \"groupLabel\": \"Enter name\",\n                \"mandatory\": true,\n                \"beneficiaryIdentityFieldsList\": {\n                    \"beneficiaryIdentityField\": [\n                        {\n                            \"description\": \"Enter the first name of the beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"givenNames\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 1024,\n                            \"subTitle\": \"The first name of the beneficiary\",\n                            \"tabOrder\": 1\n                        },\n                        {\n                            \"description\": \"Enter the family name of the beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"familyName\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 1024,\n                            \"subTitle\": \"The family name of the beneficiary\",\n                            \"tabOrder\": 2\n                        }\n                    ]\n                }\n            },\n            {\n                \"elementName\": \"address\",\n                \"groupLabel\": \"Enter address details\",\n                \"mandatory\": false,\n                \"beneficiaryIdentityFieldsList\": {\n                    \"beneficiaryIdentityField\": [\n                        {\n                            \"description\": \"Enter the first line of address of beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"addressLine1\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 254,\n                            \"subTitle\": \"First line of address of beneficiary\",\n                            \"tabOrder\": 3\n                        },\n                        {\n                            \"description\": \"Enter the second line of address of beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"addressLine2\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 254,\n                            \"subTitle\": \"Second line of address of beneficiary\",\n                            \"tabOrder\": 4\n                        },\n                        {\n                            \"description\": \"Enter the third line of address of beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"addressLine3\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 254,\n                            \"subTitle\": \"Third line of address of beneficiary\",\n                            \"tabOrder\": 5\n                        },\n                        {\n                            \"description\": \"Enter the city of residency of beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"city\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 254,\n                            \"subTitle\": \"City of residency of beneficiary\",\n                            \"tabOrder\": 6\n                        },\n                        {\n                            \"description\": \"Enter the province of residency of beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"province\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 254,\n                            \"subTitle\": \"Province of residency of beneficiary\",\n                            \"tabOrder\": 7\n                        },\n                        {\n                            \"description\": \"Enter the postcode of residency of beneficiary\",\n                            \"displaySize\": 10,\n                            \"elementName\": \"postcode\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 10,\n                            \"subTitle\": \"Postcode of residency of beneficiary\",\n                            \"tabOrder\": 8\n                        },\n                        {\n                            \"description\": \"Enter the ISO county code of residency of beneficiary\",\n                            \"displaySize\": 2,\n                            \"elementName\": \"country\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 2,\n                            \"subTitle\": \"ISO county of residency of beneficiary\",\n                            \"tabOrder\": 9\n                        }\n                    ]\n                }\n            },\n            {\n                \"elementName\": \"identificationList\",\n                \"groupLabel\": \"Enter identification details\",\n                \"mandatory\": false,\n                \"beneficiaryIdentityFieldsList\": {\n                    \"beneficiaryIdentityField\": [\n                        {\n                            \"description\": \"Enter one of the identification information of beneficiary\",\n                            \"displaySize\": 25,\n                            \"elementName\": \"idType\",\n                            \"inputType\": \"list\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 25,\n                            \"subTitle\": \"Identification information of beneficiary\",\n                            \"tabOrder\": 10,\n                            \"listItems\": {\n                                \"beneficiaryIdentityField\": [\n                                    {\n                                        \"label\": \"Passport\",\n                                        \"value\": \"Passport\"\n                                    },\n                                    {\n                                        \"label\": \"National ID Card\",\n                                        \"value\": \"National ID Card\"\n                                    },\n                                    {\n                                        \"label\": \"Driving License\",\n                                        \"value\": \"Driving License\"\n                                    }\n                                ]\n                            }\n                        },\n                        {\n                            \"description\": \"Enter the identifier value of the beneficiary document\",\n                            \"displaySize\": 10,\n                            \"elementName\": \"identificationNumber\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 50,\n                            \"subTitle\": \"Identifier value of the document\",\n                            \"tabOrder\": 11\n                        },\n                        {\n                            \"description\": \"Enter the ISO country code of issue of the beneficiary identification document\",\n                            \"displaySize\": 2,\n                            \"elementName\": \"identificationCountry\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 2,\n                            \"subTitle\": \"ISO country of issue of the identification document\",\n                            \"tabOrder\": 12\n                        },\n                        {\n                            \"description\": \"Enter the date of issue of beneficiary identification document\",\n                            \"displaySize\": 10,\n                            \"elementName\": \"validFromDate\",\n                            \"inputType\": \"date\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 10,\n                            \"subTitle\": \"Date of issue of identification document\",\n                            \"tabOrder\": 13\n                        },\n                        {\n                            \"description\": \"Enter the date of expiry of beneficiary identification document\",\n                            \"displaySize\": 10,\n                            \"elementName\": \"validToDate\",\n                            \"inputType\": \"date\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 10,\n                            \"subTitle\": \"Date of expiry of identification document\",\n                            \"tabOrder\": 14\n                        }\n                    ]\n                }\n            },\n            {\n                \"elementName\": \"birthInformation\",\n                \"groupLabel\": \"Enter birth information\",\n                \"mandatory\": false,\n                \"beneficiaryIdentityFieldsList\": {\n                    \"beneficiaryIdentityField\": [\n                        {\n                            \"description\": \"Enter the city of birth of the beneficiary\",\n                            \"displaySize\": 35,\n                            \"elementName\": \"cityOfBirth\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": false,\n                            \"maxSize\": 254,\n                            \"subTitle\": \"The city of birth of the beneficiary\",\n                            \"tabOrder\": 15\n                        },\n                        {\n                            \"description\": \"Enter the ISO country code of birth of the beneficiary\",\n                            \"displaySize\": 2,\n                            \"elementName\": \"countryOfBirth\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 2,\n                            \"subTitle\": \"The ISO country of birth of the beneficiary\",\n                            \"tabOrder\": 16\n                        },\n                        {\n                            \"description\": \"Enter the date of birth of the beneficiary\",\n                            \"displaySize\": 10,\n                            \"elementName\": \"dateOfBirth\",\n                            \"inputType\": \"date\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 10,\n                            \"subTitle\": \"The date of birth of the beneficiary\",\n                            \"tabOrder\": 17\n                        }\n                    ]\n                }\n            },\n            {\n                \"elementName\": \"additionalData\",\n                \"groupLabel\": \"Enter any additional data\",\n                \"mandatory\": false,\n                \"beneficiaryIdentityFieldsList\": {\n                    \"beneficiaryIdentityField\": [\n                        {\n                            \"description\": \"Enter parameter name for the additional data\",\n                            \"displaySize\": 25,\n                            \"elementName\": \"additionalDataKey\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 25,\n                            \"subTitle\": \"Additional data parameter name\",\n                            \"tabOrder\": 18\n                        },\n                        {\n                            \"description\": \"Enter value for the additional data\",\n                            \"displaySize\": 25,\n                            \"elementName\": \"additionalDataValue\",\n                            \"inputType\": \"text\",\n                            \"locale\": \"en\",\n                            \"mandatory\": true,\n                            \"maxSize\": 25,\n                            \"subTitle\": \"Additional data parameter value\",\n                            \"tabOrder\": 19\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"beneficiaryBankAccountFieldGroupsList\": {\n        \"beneficiaryBankAccountFieldGroup\": [\n            {\n                \"groupLabel\": \"Bank Name\",\n                \"mandatory\": true,\n                \"beneficiaryBankAccountFieldsList\": {\n                    \"beneficiaryBankAccountField\": {\n                        \"description\": \"Enter the Bank Name\",\n                        \"displaySize\": 30,\n                        \"inputType\": \"text\",\n                        \"locale\": \"en\",\n                        \"maxSize\": 50,\n                        \"parameterName\": \"bankName\",\n                        \"separator\": \" \",\n                        \"subTitle\": \"Bank Name\",\n                        \"tabOrder\": 1\n                    }\n                }\n            },\n            {\n                \"groupLabel\": \"Account Holder\",\n                \"mandatory\": true,\n                \"beneficiaryBankAccountFieldsList\": {\n                    \"beneficiaryBankAccountField\": {\n                        \"description\": \"Account Holders Name\",\n                        \"displaySize\": 35,\n                        \"inputType\": \"text\",\n                        \"locale\": \"en\",\n                        \"maxSize\": 35,\n                        \"parameterName\": \"accountName\",\n                        \"separator\": \" \",\n                        \"subTitle\": \"Account Holder\",\n                        \"tabOrder\": 2\n                    }\n                }\n            },\n            {\n                \"groupLabel\": \"Account Number\",\n                \"mandatory\": true,\n                \"beneficiaryBankAccountFieldsList\": {\n                    \"beneficiaryBankAccountField\": {\n                        \"description\": \"Enter the Account Number\",\n                        \"displaySize\": 8,\n                        \"inputType\": \"text\",\n                        \"locale\": \"en\",\n                        \"maxSize\": 8,\n                        \"parameterName\": \"accountNumber\",\n                        \"separator\": \" \",\n                        \"subTitle\": \"Account\",\n                        \"tabOrder\": 3\n                    }\n                }\n            },\n            {\n                \"groupLabel\": \"Sort Code\",\n                \"mandatory\": true,\n                \"beneficiaryBankAccountFieldsList\": {\n                    \"beneficiaryBankAccountField\": {\n                        \"description\": \"Enter the Sort Code\",\n                        \"displaySize\": 6,\n                        \"inputType\": \"text\",\n                        \"locale\": \"en\",\n                        \"maxSize\": 6,\n                        \"parameterName\": \"sortCode\",\n                        \"separator\": \" \",\n                        \"subTitle\": \"Sort Code\",\n                        \"tabOrder\": 4\n                    }\n                }\n            }\n        ]\n    },\n    \"purposeOfPaymentFieldGroupsList\": {\n        \"mandatory\": false\n    }\n}",
        "Attributes": {},
        "Nullable": false,
        "IsArray": false,
        "IsMap": false,
        "Name": "response",
        "Description": "Payment metadata succesfully returned."
      },
      "ResponseCode": 200,
      "HasOptionalQueryParams": false,
      "HasOptionalFieldParams": false,
      "CollectParameters": false,
      "RequiredScopes": [],
      "Parameters": [
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "Valid supported ISO 3166 2-character country code.",
          "DefaultValue": "GB"
        },
        {
          "ParamFormat": "Query",
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": "GBP"
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "IdentityEntity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "individual",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentityEntityType",
          "Description": "Type of beneficiary identity.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "locale",
          "Description": "Localization String e.g. en_GB, en_US.",
          "DefaultValue": ""
        },
        {
          "ParamFormat": "Query",
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "standard",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Service Level. Allowed values are standard and express.",
          "DefaultValue": ""
        }
      ],
      "Errors": [
        {
          "ErrorCode": 400,
          "ErrorMessage": "The requested operation could not be performed. Input Request is invalid or incorrect.",
          "ErrorTypeName": "ValidationException"
        },
        {
          "ErrorCode": 401,
          "ErrorMessage": "Unauthorized - Invalid API Key and Token."
        },
        {
          "ErrorCode": 500,
          "ErrorMessage": "An internal error has occurred in the Earthport payment platform."
        }
      ],
      "TestCases": [
        {
          "Name": "Test Get Metadata for Payment Request",
          "Description": "Returns required field for creating the payment request.",
          "Enabled": false,
          "ShouldPass": true,
          "InputParameters": [
            {
              "IsNull": false,
              "Name": "countryCode",
              "Value": "GB"
            },
            {
              "IsNull": false,
              "Name": "currencyCode",
              "Value": "GBP"
            },
            {
              "IsNull": true,
              "Name": "beneficiaryIdentityEntityType",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "locale",
              "Value": ""
            },
            {
              "IsNull": true,
              "Name": "serviceLevel",
              "Value": ""
            }
          ],
          "ExpectedStatus": "200",
          "ExpectedHeaders": [],
          "ExpectedHeadersAllowExtra": true,
          "ExpectedBodyMatchMode": "NONE",
          "ExpectedArrayOrderedMatching": false,
          "ExpectedArrayCheckCount": false,
          "ResponseMatchSchema": true
        }
      ],
      "WrapBodyInObject": false
    }
  ],
  "EndpointGroups": [],
  "CustomTypes": [
    {
      "Name": "EarthportMerchantLiquidityTransfer",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "Financial transaction representing the transfer of liquidity from an Earthport account to a Merchants Central account.",
      "Fields": [],
      "Discriminator": "",
      "DiscriminatorValue": "Earthport Merchant Liquidity Movement"
    },
    {
      "Name": "MerchantLiquidityMovementTransaction",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "A financial transaction representing movement of funds between a merchant's accounts held in the EPS system.",
      "Fields": [
        {
          "Optional": true,
          "Type": "FXExecutedRate",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxExecutedDetail",
          "Description": "Represents the details of an FX transaction, encapsulating the sellAmount, buyAmount and fxRate into a single type.",
          "DefaultValue": ""
        }
      ],
      "Discriminator": "",
      "DiscriminatorValue": "Merchant Liquidity Movement",
      "ExampleValue": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474988436283\n    },\n    \"timestamp\": \"2018-06-06T09:29:46.329+00:00\",\n    \"transactionType\": \"Merchant Liquidity Movement\",\n    \"amount\": {\n        \"amount\": 20,\n        \"currency\": \"GBP\"\n    },\n    \"movementType\": \"Debit\",\n    \"fxExecutedDetail\": {\n        \"fxRate\": {\n            \"buyCurrency\": \"EUR\",\n            \"rate\": 1.25,\n            \"sellCurrency\": \"GBP\"\n        }\n    },\n    \"description\": \"FX EarthportPaymentTest GBP vs. EUR Test fx transfer txn for REST API\"\n}"
    },
    {
      "Name": "UnstructuredIdentity",
      "ImplementationType": "Structure",
      "Description": "Represents a set of name value pairs that can be supplied as the Identity information. The keys will be validated on the server side against a list of valid types that are accepted. Both the key and the value are required.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Name",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Key",
          "Description": "Unstructured Identity Key",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "John Smith",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Value",
          "Description": "Unstructured Identity Value",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "FieldValue",
      "ImplementationType": "Structure",
      "Description": "Is used to create a select list within a User Interface for the 'additionalFieldWithValues' data field.",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "label",
          "Description": "List item label.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "option",
          "Description": "List option value.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "IdentityRestriction",
      "ImplementationType": "Structure",
      "Description": "Indicates whether a purpose of payment code is valid if the beneficiary is an individual or legal entity.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "individual",
          "Description": "Is the purpose of payment code valid if the beneficiary is an individual.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntity",
          "Description": "Is the purpose of payment code is valid if the beneficiary is a legal entity.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "LegalEntityIdentity",
      "ImplementationType": "Structure",
      "Description": "The identity of a legal entity. The 'legalEntityName' is mandatory. You must supply one of 'legalEntityRegistration' or 'address'.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "XYZ Corp",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 1024
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntityName",
          "Description": "The name component of the legal entity. The length of this field is limited to 1024 bytes. 1024 bytes can hold 1024 normal English characters.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "LegalEntityRegistration",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntityRegistration",
          "Description": "This group consists of a legal entity registration number type and the country that the legal entity is registered in. Legal Entity Registration Number is mandatory Legal Entity Registration Country is mandatory Legal Entity Registration Province is optional.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Address",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "address",
          "Description": "Represents an address. Mandatory attributes are 'addressLine1', 'city' and 'country'. All other attributes are optional.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryBankAccountListItem",
      "ImplementationType": "Structure",
      "Description": "This is used to populate a beneficiary bank account field which needs to be displayed as a list in the UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "label",
          "Description": "The visible label to be presented in the UI list.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "The stored value for the visible list item label.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\"label\":\"Checking\",\"value\":\"1\"}"
    },
    {
      "Name": "BeneficiaryIdentityFieldsList",
      "ImplementationType": "Structure",
      "Description": "This type defines a list of beneficiary identity fields.",
      "Fields": [
        {
          "Optional": true,
          "Type": "BeneficiaryIdentityField",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryIdentityField",
          "Description": "List of beneficiary identity fields.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\"beneficiaryIdentityField\":[{\"description\":\"Enter the first name of the beneficiary\",\"displaySize\":35,\"elementName\":\"givenNames\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":1024,\"subTitle\":\"The first name of the beneficiary\",\"tabOrder\":1},{\"description\":\"Enter the family name of the beneficiary\",\"displaySize\":35,\"elementName\":\"familyName\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":1024,\"subTitle\":\"The family name of the beneficiary\",\"tabOrder\":2}]}"
    },
    {
      "Name": "Quotes Indicative Response",
      "ImplementationType": "Structure",
      "Description": "This represents and indicative FX rate. No ticket is created in earthport payments system for such indicative quotes.",
      "Fields": [
        {
          "Optional": false,
          "Type": "FXDetail",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxDetail",
          "Description": "Represents the details of an FX transaction, encapsulating the sellAmount, buyAmount and fxRate into a single type.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"fxDetail\": {\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyAmount\": {\n            \"currency\": \"GBP\",\n            \"amount\": 822.47\n        },\n        \"fxRate\": {\n            \"sellCurrency\": \"EUR\",\n            \"buyCurrency\": \"GBP\",\n            \"rate\": 1.21585\n        }\n    }\n}"
    },
    {
      "Name": "PurposeOfPaymentFieldGroupsList",
      "ImplementationType": "Structure",
      "Description": "This group contains all configuration information for Purpose of Payment options. The 'mandatory' attribute indicates whether provision of Purpose of Payment data is required for the Payout to be accepted.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "true",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "mandatory",
          "Description": "Whether the purpose of payment is mandatory.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PurposeOfPaymentCode",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "purposeOfPaymentCode",
          "Description": "List of valid purpose of payment codes.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "IdentityEntity",
      "ImplementationType": "Enumeration",
      "Description": "Supported identity entity types.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntity",
          "Description": "Legal Entity such as a company.",
          "DefaultValue": "individual"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "individual",
          "Description": "Individual person.",
          "DefaultValue": "legalEntity"
        }
      ]
    },
    {
      "Name": "BeneficiaryBankAccountFieldsList",
      "ImplementationType": "Structure",
      "Description": "This type defines a bank account field.",
      "Fields": [
        {
          "Optional": true,
          "Type": "BeneficiaryBankAccountField",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryBankAccountField",
          "Description": "List of beneficiary bank account fields.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"beneficiaryBankAccountField\": {\r\n            \"description\": \"Enter the Account Number\",\r\n            \"displaySize\": 8,\r\n            \"inputType\": \"text\",\r\n            \"locale\": \"en\",\r\n            \"maxSize\": 8,\r\n            \"parameterName\": \"accountNumber\",\r\n            \"separator\": \" \",\r\n            \"subTitle\": \"Account\",\r\n            \"tabOrder\": 3\r\n          }\r\n}\r\n        "
    },
    {
      "Name": "GetPayoutRequiredDataResponse",
      "ImplementationType": "Structure",
      "Description": "All the data required to settle a payment with a given currency into a given country.",
      "Fields": [
        {
          "Optional": true,
          "Type": "BeneficiaryBankAccountGroupsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryBankAccountFieldGroupsList",
          "Description": "This type defines a list of bank account data groups. Each group is normally represented as a row on the UI.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryIdentityGroupsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentityFieldGroupsList",
          "Description": "This type defines a list of identity data groups. Each group is normally represented as a section of fields on the UI.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "PurposeOfPaymentFieldGroupsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "purposeOfPaymentFieldGroupsList",
          "Description": "This group contains all configuration information for Purpose of Payment options. The 'mandatory' attribute indicates whether provision of Purpose of Payment data is required for the Payout to be accepted.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Payments Create Request",
      "ImplementationType": "Structure",
      "Description": "This is a composite request. It is used when you have to create a payment request to a beneficiary bank account which is not previously registered on the earthport payment system. This request is also extended to create a payment request on behalf of a user that is not previously registered on the earthport system.",
      "Fields": [
        {
          "Optional": true,
          "Type": "User",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "user",
          "Description": "A user Object. This user objected will be verified agaist the previously registered users in the merchant account based on the UserID parameter. if one already exists then the payer identity information of the existing account will be updated with that specified in the request.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BankAccount",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "bankAccount",
          "Description": "The beneficiary bank account Object. If the beneficiary bank account is a duplicate of one previously registered against the supplied UserID, the existing beneficiary bank account will be used for creating a payment.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Payment",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payment",
          "Description": "Beneficiary Bank account payment. This object is used to supply the payout information.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "GetPayoutRequiredDataForBank",
      "ImplementationType": "Structure",
      "Fields": [
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PayerType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payer",
          "Description": "The Payer Type is optional. If no Payer Type is specified then the default value of authenticatedCaller will be used.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "UsersBankID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "usersBankID",
          "Description": "This group consists of a collection of both the user ID group and beneficiary bank ID group. The 'userID' is a collection of user identifier types. The 'benBankID' is a collection of account identifier types. Both the 'userID' and 'benBankID' fields are mandatory.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryIdentityFieldGroupChoice",
      "ImplementationType": "Structure",
      "Description": "This type defines that in common case at least one of the nested groups should be included into addBeneficiaryBankAccount request document. On UI it can be presented with drop-down list containing nested groups labels. 'minElementNum' minimum this number of the nested groups should be specified (1 by default). 'maxElementNum' maximum this number of the nested groups can be specified (1 by default).",
      "Fields": [
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "1",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "maxGroupsListNum",
          "Description": "The maximum number of selections which need to be made from the choices.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "1",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "minGroupsListNum",
          "Description": "The minimum number of selections which need to be made from the choices.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BeneficiaryIdentityGroupsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryIdentityFieldGroupsList",
          "Description": "List of beneficiary identity field groups.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "SortOrder",
      "ImplementationType": "Enumeration",
      "Description": "Specifies an order sequence.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "ASC",
          "Description": "Sort result set by chosen field in ASCENDING order.",
          "DefaultValue": "ASC"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "DESC",
          "Description": "Sort result set by chosen field in DESCENDING order.",
          "DefaultValue": "DESC"
        }
      ],
      "ExampleValue": "DESC"
    },
    {
      "Name": "Settlement Calendars Get Response",
      "ImplementationType": "Structure",
      "Description": "This represents a Settlement Calendar, with a range of settlement dates and the corresponding cut-off time.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "responseTimeStamp",
          "Description": "A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm. Represents the timestamp when the Settlement Calendar was generated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "SettlementCalendar",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "settlementCalendar",
          "Description": "Represents a calander of settlement dates and the cut-off time for these settlement dates.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Failure",
      "BaseType": "",
      "ImplementationType": "Structure",
      "Description": "An individual failure/error description. This is used by the ValidationException model.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "bankAccountDetails.bankName",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "key",
          "Description": "Key identifies the specific field which is in error.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Long",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "12041",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "code",
          "Description": "Earthport specific validation error code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Beneficiary Bank Name not supplied",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "Descriptive explanation of the error.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n        \"key\": \"bankAccountDetails.bankName\",\r\n        \"code\": 12041,\r\n        \"value\": \"Beneficiary Bank Name not supplied\"\r\n      }"
    },
    {
      "Name": "AdditionalData",
      "ImplementationType": "Structure",
      "Description": "Represents a set of name value pairs that can be supplied with the Identity information. The keys will be validated on the server side against a list of valid types that are accepted. See the \"API Solution Guide\" for further details. Both the key and the value are required if adding additional data.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "NATIONAL_ID_CARD",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Key",
          "Description": "This represents the 'key' of the additional data. The length of this field is currently restricted to 50 bytes, and will be truncated if the value is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "TT6789CC",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Value",
          "Description": "This represents the 'value' of the additional data. The length of this field is currently restricted to 254 bytes, when used for Payer Identity, and 1024 bytes when used for Beneficiary Identity.The field value will be truncated if the value is too long.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BirthInformation",
      "ImplementationType": "Structure",
      "Description": "The group consists of elements that define birth information for an individual.",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "London",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "cityOfBirth",
          "Description": "This represents the date of birth. The length of this field is limited to 254 bytes. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryOfBirth",
          "Description": "Valid supported ISO 3166 2-character country code. This represents the country of birth.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "dateOfBirth",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. This represents the date of birth.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "LegalEntityRegistration",
      "ImplementationType": "Structure",
      "Description": "This group consists of a legal entity registration number type and the country that the legal entity is registered in. Legal Entity Registration Number is mandatory, Legal Entity Registration Country is mandatory and Legal Entity Registration Province is optional.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntityRegistrationCountry",
          "Description": "Valid supported ISO 3166 2-character country code. This represents Registration Country of the Legal Entity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "QWERTY54321",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntityRegistrationNumber",
          "Description": "The registration number component of the legal entity. The length of this field is limited to 254 bytes. 254 bytes can hold 254 normal English characters. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Greater London",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntityRegistrationProvince",
          "Description": "Optional province of the legal entity's address.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BankAccountDetails",
      "ImplementationType": "Structure",
      "Description": "This group holds all possible account identifier types - listed below in alphabetical order. The data which should be supplied in this group differs depending on the bank account territory. Please refer to the integration guide for territory specific details of what should be supplied. The following set of parameter names are valid keys:- abaRoutingNumber, accountName, accountNumber, accountNumberPrefix, accountNumberSuffix, accountType, bankCode, bankName, branchCode, bic, holdingBranchName, iban, miscField1, miscField2, miscField3, sortCode, swiftBic.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "\"accountNumber\"",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 50
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "key",
          "Description": "Type which defines the allowable data which may be passed to the \"key\" element of the BankAccountDetails.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "\"06970093\"",
          "Attributes": {
            "MinimumLength": 1
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "Type which defines the allowable data which may be passed to the \"value\" element of the BankAccountDetails.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"key\": \"accountNumber\",\r\n  \"value\": \"06970093\"\r\n}"
    },
    {
      "Name": "AdditionalInformation",
      "ImplementationType": "Enumeration",
      "Description": "Provides additional detail about a money movement",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "UniqueTransactionId",
          "Description": "Unique Transaction Id",
          "DefaultValue": "UniqueTransactionId"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "InstructedCurrency",
          "Description": "Instructed Currency",
          "DefaultValue": "InstructedCurrency"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "InstructedAmount",
          "Description": "Instructed Amount",
          "DefaultValue": "InstructedAmount"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "SettledCurrency",
          "Description": "Settled Currency",
          "DefaultValue": "SettledCurrency"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "SettledAmount",
          "Description": "Settled Amount",
          "DefaultValue": "SettledAmount"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "SettledDate",
          "Description": "Settled Date",
          "DefaultValue": "SettledDate"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "DebitCreditIndicator",
          "Description": "Debit/Credit Indicator",
          "DefaultValue": "DebitCreditIndicator"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "TransactionType",
          "Description": "Transaction Type",
          "DefaultValue": "TransactionType"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "TransactionNarrative",
          "Description": "Transaction Narrative",
          "DefaultValue": "TransactionNarrative"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "AdditionalNarrative",
          "Description": "Additional Narrative",
          "DefaultValue": "AdditionalNarrative"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorBank",
          "Description": "Originator Bank",
          "DefaultValue": "OriginatorBank"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorAccountNumber",
          "Description": "Originator Account Number",
          "DefaultValue": "OriginatorAccountNumber"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorNameAddressCombined",
          "Description": "Originator Name-Address Combined",
          "DefaultValue": "OriginatorNameAddressCombined"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorAccountName",
          "Description": "Originator Account Name",
          "DefaultValue": "OriginatorAccountName"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorAddress",
          "Description": "Originator Address",
          "DefaultValue": "OriginatorAddress"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorCity",
          "Description": "Originator City",
          "DefaultValue": "OriginatorCity"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorCountry",
          "Description": "Originator Country",
          "DefaultValue": "OriginatorCountry"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorDOB",
          "Description": "Originator Date Of Birth",
          "DefaultValue": "OriginatorDOB"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "OriginatorNationalId",
          "Description": "Originator National Id",
          "DefaultValue": "OriginatorNationalId"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryNameAddressCombined",
          "Description": "Beneficiary Name-Address Combined",
          "DefaultValue": "BeneficiaryNameAddressCombined"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryName",
          "Description": "Beneficiary Name",
          "DefaultValue": "BeneficiaryName"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryDOB",
          "Description": "Beneficiary Date Of Birth",
          "DefaultValue": "BeneficiaryDOB"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryNationalId",
          "Description": "Beneficiary National Id",
          "DefaultValue": "BeneficiaryNationalId"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryAddress",
          "Description": "Beneficiary Address",
          "DefaultValue": "BeneficiaryAddress"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryCity",
          "Description": "Beneficiary City",
          "DefaultValue": "BeneficiaryCity"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "BeneficiaryCountry",
          "Description": "Beneficiary Country",
          "DefaultValue": "BeneficiaryCountry"
        }
      ]
    },
    {
      "Name": "Beneficiary Bank Account Get Response",
      "ImplementationType": "Structure",
      "Description": "This type provides all the possible information required to identify a beneficiary bank account.",
      "Fields": [
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n    \"epUserID\": 3409890146942,\r\n    \"merchantUserID\": \"userID_1540303323210\"\r\n  }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of all possible user identifier types. The 'epUserID' field is a unique identifier for a merchant and is the equivalent of a Virtual Account Number (VAN). The 'merchantUserID' is a merchant specified identifier for an individual or company that an account was set up for. The 'epUserID', 'merchantUserID' or both 'epUserID' and 'merchantUserID' can be supplied. A mapping will be performed to retrieve the merchant user ID from the supplied EP user ID and vice versa. If both the 'epUserID' and 'merchantUserID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BenBankID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n    \"epBankID\": 4034215,\r\n    \"merchantBankID\": \"bankID_1540304037951\"\r\n  }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "benBankID",
          "Description": "This group consists of all possible beneficiary bank identifier types. The 'epBankID' field is a unique identifier for a beneficiary bank account. The 'merchantBankID' is an optional merchant specified identifier for the beneficiary bank account. The 'epBankID', 'merchantBankID' or both 'epBankID' and 'merchantBankID' can be supplied. A mapping will be performed to retrieve the merchant bank ID from the supplied EP bank ID and vice versa. If both the 'epBankID' and 'merchantBankID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"ABC\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      },\r\n      \"birthInformation\": {\r\n        \"cityOfBirth\": \"ABC\",\r\n        \"countryOfBirth\": \"GB\",\r\n        \"dateOfBirth\": \"2001-01-01Z\"\r\n      },\r\n      \"identification\": [\r\n        {\r\n          \"idType\": \"Passport\",\r\n          \"identificationCountry\": \"GB\",\r\n          \"identificationNumber\": \"ABC123\",\r\n          \"validFromDate\": \"2001-01-01Z\",\r\n          \"validToDate\": \"2001-01-01Z\"\r\n        }\r\n      ]\r\n    },\r\n    \"additionalData\": [\r\n      {\r\n        \"Key\": \"NATIONAL_ID_CARD\",\r\n        \"Value\": \"TT6789CC\"\r\n      }\r\n    ]\r\n  }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentity",
          "Description": "Represents the beneficiary identity of an individual or legal entity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Mr J Smith",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Type which defines a beneficiary bank account description. Each bank account must be given a description therefore this is a mandatory component of the BeneficiaryBankAccount.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "Valid supported ISO 3166 2-character country code. It is the territory in which this bank account is domiciled.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "Valid supported ISO 4217 3-character currency code. The currency held in this bank account may optionally be supplied in this field.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "true",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "isActive",
          "Description": "Return true if the bank account is active",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BankAccountDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "[\r\n    {\r\n      \"key\": \"bankName\",\r\n      \"value\": \"Test Bank\"\r\n    },\r\n    {\r\n      \"key\": \"accountName\",\r\n      \"value\": \"Mr J. Smith\"\r\n    },\r\n    {\r\n      \"key\": \"accountNumber\",\r\n      \"value\": \"06970093\"\r\n    },\r\n    {\r\n      \"key\": \"sortCode\",\r\n      \"value\": \"800554\"\r\n    },\r\n    {\r\n      \"key\": \"bic\",\r\n      \"value\": \"BOFSGB21377\"\r\n    }\r\n  ]",
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bankAccountDetails",
          "Description": "This is a group of sub-elements which collectively identify both the bank and the account within the bank",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"userID\": {\r\n    \"epUserID\": 3409890146942,\r\n    \"merchantUserID\": \"userID_1540303323210\"\r\n  },\r\n  \"benBankID\": {\r\n    \"epBankID\": 4034215,\r\n    \"merchantBankID\": \"bankID_1540304037951\"\r\n  },\r\n  \"beneficiaryIdentity\": {\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"ABC\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      },\r\n      \"birthInformation\": {\r\n        \"cityOfBirth\": \"ABC\",\r\n        \"countryOfBirth\": \"GB\",\r\n        \"dateOfBirth\": \"2001-01-01Z\"\r\n      },\r\n      \"identification\": [\r\n        {\r\n          \"idType\": \"Passport\",\r\n          \"identificationCountry\": \"GB\",\r\n          \"identificationNumber\": \"ABC123\",\r\n          \"validFromDate\": \"2001-01-01Z\",\r\n          \"validToDate\": \"2001-01-01Z\"\r\n        }\r\n      ]\r\n    },\r\n    \"additionalData\": [\r\n      {\r\n        \"Key\": \"NATIONAL_ID_CARD\",\r\n        \"Value\": \"TT6789CC\"\r\n      }\r\n    ]\r\n  },\r\n  \"description\": \"Bank Account Description\",\r\n  \"countryCode\": \"GB\",\r\n  \"currencyCode\": \"GBP\",\r\n  \"isActive\": true,\r\n  \"bankAccountDetails\": [\r\n    {\r\n      \"key\": \"bankName\",\r\n      \"value\": \"Test Bank\"\r\n    },\r\n    {\r\n      \"key\": \"accountName\",\r\n      \"value\": \"Mr J. Smith\"\r\n    },\r\n    {\r\n      \"key\": \"accountNumber\",\r\n      \"value\": \"06970093\"\r\n    },\r\n    {\r\n      \"key\": \"sortCode\",\r\n      \"value\": \"800554\"\r\n    },\r\n    {\r\n      \"key\": \"bic\",\r\n      \"value\": \"BOFSGB21377\"\r\n    }\r\n  ]\r\n}"
    },
    {
      "Name": "Payments RegisteredBeneficiary Create Request",
      "ImplementationType": "Structure",
      "Description": "This request is used to request a payout to a given beneficiary bank account. This message is used by Earthport merchants who are requesting payouts on behalf of a customer.",
      "Fields": [
        {
          "Optional": false,
          "Type": "TransactionID_Merchant",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n\t\t\"merchantTransactionID\": \"txID12345\"\r\n\t}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "This group consists of merchant transaction reference only.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n  \"amount\": 100,\r\n  \"currency\": \"GBP\"\r\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutRequestAmount",
          "Description": "The requested payout amount and currency. The currency of the payout request amount is often different from the currency of the Beneficiary Bank Account. This represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryAmountInformation",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryAmountInformation",
          "Description": "Used to specify the beneficiary amount and the payout currency.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 0,
            "MaximumLength": 255
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryStatementNarrative",
          "Description": "Narrative text to be displayed on the beneficiary bank accounts statement, where the banking network supports this.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 9999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxTicketID",
          "Description": "Optional FxTicket Id to be used. This is a unique reference sent back to the Merchant as a response to getFXQuote as UID. If specified, the system will honour the rate specified in the FX Ticket for the Payment. The Earthport System will validate the specified FX Ticket including TTL on the Ticket. If the TTL has expired, the Earthport system will throw an error.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "RequestedFX",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "requestedFX",
          "Description": "Optional FX method to use in order to settle the payout request where the payout request currency and the beneficiary currency do not match.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutType",
          "Description": "Reserved for future use. Will be used to state the Payout type.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PayoutDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "payoutDetails",
          "Description": "Additional information related to the payment such as Purpose of Payment.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "TransactionHold",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionHold",
          "Description": "Parameter to prevent transactions from being processed until the desired time has been reached. Note releaseDateTime must be in UTC format. Transaction hold is optional, If not provided the transaction will be processeed as soon as possible.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": ""
    },
    {
      "Name": "Payment",
      "ImplementationType": "Structure",
      "Description": "This request is used to request a payout to a given beneficiary bank account. This message is used by Earthport merchants who are requesting payouts on behalf of a customer.",
      "Fields": [
        {
          "Optional": false,
          "Type": "TransactionID_Merchant",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "This group consists of merchant transaction reference only.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutRequestAmount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds. The currency of the payout request amount is often different from the currency of the Beneficiary Bank Account.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryAmountInformation",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryAmountInformation",
          "Description": "Used to specify the beneficiary amount and the payout currency.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Free Text Description",
          "Attributes": {
            "MinimumLength": 0,
            "MaximumLength": 255
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryStatementNarrative",
          "Description": "Narrative text to be displayed on the beneficiary bank accounts statement, where the banking network supports this.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "987654321",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 9999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxTicketID",
          "Description": "Optional FxTicket Id to be used. This is a unique reference sent back to the Merchant as a response to getFXQuote as UID. If specified, the system will honour the rate specified in the FX Ticket for the Payment. The Earthport System will validate the specified FX Ticket including TTL on the Ticket. If the TTL has expired, the Earthport system will throw an error.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "RequestedFX",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "requestedFX",
          "Description": "Optional FX method to use in order to settle the payout request where the payout request currency and the beneficiary currency do not match.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "NA",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutType",
          "Description": "Reserved for future use. Will be used to state the Payout type.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PayoutDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "payoutDetails",
          "Description": "Additional information related to the payment such as Purpose of Payment",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "TransactionHold",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionHold",
          "Description": "Parameter to prevent transactions from being processed until the desired time has been reached. Note releaseDateTime must be in UTC format. Transaction hold is optional, if not provided the transaction will be processed as soon as possible.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryIdentityField",
      "ImplementationType": "Structure",
      "Description": "Each BeneficiaryIdentityField would normally be displayed in the UI from left to right based on the tabOrder attribute. The BeneficiaryIdentityField element contains the attributes described below:-",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Suggested roll-over or help text description to assist users.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Long",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "displaySize",
          "Description": "A suggested field size to display.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "elementName",
          "Description": "The name of the element in the addBeneficiaryBankAccount request document for the corresponding field.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BeneficiaryIdentityFieldInput",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "inputType",
          "Description": "Supported input types for a beneficiary identity UI.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "locale",
          "Description": "The localisation setting of this particular record.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "mandatory",
          "Description": "Indicates whether the field is mandatory.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Long",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "maxSize",
          "Description": "Suggested client side syntactic validation rule.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "parameterName",
          "Description": "The name of the corresponding Earthport parameter to use when calling addBeneficiaryBankAcount.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "separator",
          "Description": "The separator to display following (to the right hand side) this field, usually '-' or '/'.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "subTitle",
          "Description": "If present contains a sub-label to be displayed with the field.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Long",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "tabOrder",
          "Description": "Indicates the ordering of this field in the UI.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "valueRegexp",
          "Description": "The regexp for the value of this field.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryIdentityListItems",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "listItems",
          "Description": "The beneficiaryIdentityField contains optional listItem sub-elements. The listItem sub-elements would normally be present where the inputType attribute is 'list'.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"description\": \"Enter the first name of the beneficiary\",\r\n  \"displaySize\": 35,\r\n  \"elementName\": \"givenNames\",\r\n  \"inputType\": \"text\",\r\n  \"locale\": \"en\",\r\n  \"mandatory\": true,\r\n  \"maxSize\": 1024,\r\n  \"subTitle\": \"The first name of the beneficiary\",\r\n  \"tabOrder\": 1\r\n}"
    },
    {
      "Name": "PayerType",
      "ImplementationType": "Enumeration",
      "Description": "The type of Payer making the payment. This determines which identity details are used as the payer identity.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "authenticatedCaller",
          "Description": "Payout is being requested on behalf of the requesting merchant.",
          "DefaultValue": "authenticatedCaller"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchant",
          "Description": "Payout is being requested on behalf of a managed merchant.",
          "DefaultValue": "managedMerchant"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "user",
          "Description": "Payout is being requested on behalf of a user.",
          "DefaultValue": "user"
        }
      ]
    },
    {
      "Name": "PayoutDetails",
      "ImplementationType": "Structure",
      "Description": "Allows additional data to be supplied with a payout Refer to documentation for valid keys.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "K1",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 50
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "key",
          "Description": "Type which defines the allowable data which may be passed to the \"key\" element of the PayoutDetails.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "V1",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "Type which defines the allowable data which may be passed to the \"value\" element of the PayoutDetails.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Quotes Bulk Response",
      "ImplementationType": "Structure",
      "Description": "This response is used to represent cross rates between the required sell currencies and buy currencies. A ticket is created on EarthPort payment system for such quotes.",
      "Fields": [
        {
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "987654321",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 9999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxTicketID",
          "Description": "FxTicketID is the unique number within the Earthport System representing the list of the FX Quotes presented to the Merchant. This is represented as an FX Ticket ID in Payment Request. Payout Request's specified with the optional FX Ticket Id will be validated against TTL (ExpiryTimestamp). The Earthport system will throw a validation error if TTL is expired.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "expiryTimestamp",
          "Description": "A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm. ExpiryTimestamp represents the datetime value till what the specified FxTicketID is valid. This means that all\trates in the ticket will be valid till this datetime.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BulkFXDetail",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bulkFXDetail",
          "Description": "Represents the list of fxRates and their details.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"fxTicketID\": 647160,\n    \"expiryTimestamp\": \"2018-11-23T19:08:37.239+00:00\",\n    \"bulkFXDetail\": [\n        {\n            \"sellCurrency\": \"EUR\",\n            \"buyCountry\": \"GB\",\n            \"buyCurrency\": \"GBP\",\n            \"serviceLevel\": \"standard\",\n            \"buyFxRate\": 0.82247,\n            \"sellFxRate\": 1.21585\n        },\n        {\n            \"sellCurrency\": \"USD\",\n            \"buyCountry\": \"GB\",\n            \"buyCurrency\": \"GBP\",\n            \"serviceLevel\": \"standard\",\n            \"buyFxRate\": 0.741831,\n            \"sellFxRate\": 1.348016\n        },\n        {\n            \"sellCurrency\": \"AUD\",\n            \"buyCountry\": \"GB\",\n            \"buyCurrency\": \"GBP\",\n            \"serviceLevel\": \"standard\",\n            \"buyFxRate\": 0.565164,\n            \"sellFxRate\": 1.769399\n        }\n    ]\n}"
    },
    {
      "Name": "Statement",
      "ImplementationType": "Structure",
      "Description": "The statement of transactions for a merchant account. This lists all debits and credits against this account. The results are paginated so may only be showing a subset of the total number of transactions. The statement also returns the opening and closing balances so can be used for reconciliation.",
      "Fields": [
        {
          "Optional": false,
          "Type": "StatementLineItem",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "statementLineItems",
          "Description": "List of 0 or more statement line item objects matching the request parameters. Each statement line item represents a financial transaction and an account balance resulting from the transaction.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "AccountBalance",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "openingBalance",
          "Description": "This element represents the opening balance of a merchant account or a managed merchant account.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "AccountBalance",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "closingBalance",
          "Description": "This element represents the closing balance of a merchant account or a managed merchant account.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "PaginationResult",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "paginationResult",
          "Description": "This returns a paged set of results rather than the full result set.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "MonetaryValue",
      "ImplementationType": "Structure",
      "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "100",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amount",
          "Description": "Decimal amount value. The number of decimal places is defined by the currency.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currency",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "RequestedFX",
      "ImplementationType": "Enumeration",
      "Description": "Method of FX that is requested by the merchant and for which EPS2 will attempt to use in order to settle the payout request.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "FF",
          "Description": "(Fixed to Fixed) is where no FX will be performed as payout and beneficiary currencies are the same.",
          "DefaultValue": "FF"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "FV",
          "Description": "FV (Fixed to Variable) uses the supplied payout request amount in order to determine the beneficiary amount.",
          "DefaultValue": "FV"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "VF",
          "Description": "VF (Variable to Fixed) uses the supplied beneficiary amount in order to determine the payout amount.",
          "DefaultValue": "VF"
        }
      ]
    },
    {
      "Name": "ServiceLevel",
      "ImplementationType": "Enumeration",
      "Description": "Supported service levels for a payout request (standard or express).",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "standard",
          "Description": "Standard service level payments.",
          "DefaultValue": "standard"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "express",
          "Description": "Express service level payments.",
          "DefaultValue": "express"
        }
      ]
    },
    {
      "Name": "Quotes Bulk Request",
      "ImplementationType": "Structure",
      "Description": "This request is used to retrieve cross rates between the required sell currencies and buy currencies.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Sell Currency is the currency the merchant wishes to be debited in.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Buy Currency is the currency the merchant wishes to buy or convert the sell currency into. For a Payment Request this must be one of the currencies registered for a Beneficiary Bank Account, otherwise the Earthport system will throw a validation error.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCountry",
          "Description": "Valid supported ISO 3166 2-character country code. Represents Buy Country for which FxRate was found.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n\"sellCurrency\":\"EUR\",\r\n\"buyCountry\":\"GB\",\r\n\"buyCurrency\":\"GBP\",\r\n\"serviceLevel\":\"standard\"\r\n}"
    },
    {
      "Name": "User",
      "ImplementationType": "Structure",
      "Description": "A user Object.",
      "Fields": [
        {
          "Optional": true,
          "Type": "UserID_Merchant",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of merchant user identifier only.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "ABCCORP",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 30
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchantIdentity",
          "Description": "Refers to the descriptive name used to identify a given merchant. It is unique across Earthport merchants.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "accountCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. This is used to set a default account currency.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerIdentity",
          "Description": "Represents the payer identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Transactions Cancel Response",
      "ImplementationType": "Structure",
      "Description": "This represents the response of a cancellation request for a transaction (payout instruction).",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "PendingCancellation",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "status",
          "Description": "Specifies the status of the associated transaction for the cancellation request.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Cancellation Request received for a transaction that cannot be cancelled immediately.",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "statusDescription",
          "Description": "Description associated with the cancellation status.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "timestamp",
          "Description": "A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm. This represents the cancellation request timestamp.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "IdType",
      "ImplementationType": "Enumeration",
      "Description": "Type of resource ID (UID) to be used for the API call.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchant",
          "Description": "Use your own UIDs.",
          "DefaultValue": "merchant"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "earthport",
          "Description": "Use Earthport generated UIDs.",
          "DefaultValue": "earthport"
        }
      ]
    },
    {
      "Name": "Identity",
      "ImplementationType": "Structure",
      "Description": "Represents the identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
      "Fields": [
        {
          "Optional": true,
          "Type": "IndividualIdentity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "individualIdentity",
          "Description": "The identity of an individual. The 'name' attribute is mandatory for an individual. You must supply at least identification entry or one birth information entry or one address entry.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "LegalEntityIdentity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "legalEntityIdentity",
          "Description": "The identity of a legal entity. The 'legalEntityName' is mandatory. You must supply one of 'legalEntityRegistration' or 'address'.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "UnstructuredIdentity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "unstructuredIdentity",
          "Description": "Represents a set of name value pairs that can be supplied as the Identity information. The keys will be validated on the server side against a list of valid types that are accepted.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "AdditionalData",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "additionalData",
          "Description": "Represents a set of name value pairs that can be supplied with the Identity information.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Users Create or Validate Request",
      "ImplementationType": "Structure",
      "Description": "Body of the request to create or validate a User.",
      "Fields": [
        {
          "Optional": true,
          "Type": "UserID_Merchant",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\"merchantUserID\": \"abc12345678\"}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of merchant user identifier only.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 30
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "managedMerchantName",
          "Description": "Refers to the descriptive name used to identify a given merchant. It is unique across Earthport merchants.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "accountCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. This is used to set a default account currency.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"1 Main Street\",\r\n        \"city\": \"London\",\r\n        \"country\": \"GB\"\r\n      }\r\n    }\r\n  }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerIdentity",
          "Description": "Represents the identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"userID\": {\"merchantUserID\": \"abcd1234567\"},\r\n  \"accountCurrency\": \"any\",\r\n  \"payerIdentity\": {\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"1 Main Street\",\r\n        \"city\": \"London\",\r\n        \"country\": \"GB\"\r\n      }\r\n    }\r\n  }\r\n}"
    },
    {
      "Name": "Bank Account Expected Settlement Response",
      "ImplementationType": "Structure",
      "Description": "This is the response to the Validate Beneficiary Bank Account API. The response will contain the element 'isBankAccountValid' which is a boolean representing if the specified beneficiary bank account is\tvalid. It will also return the expected settlement date of a payout based on supplied payout attributes in the request and the least cost route that can be used to settle against the beneficiary bank.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "true",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "isBankAccountValid",
          "Description": "Returns true if bank details have passed validation checks. In this case, the other response attributes of anticipatedPayoutRequestTime, serviceLevel and expectedSettlementDate are returned.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "anticipatedPayoutRequestTime",
          "Description": "A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm. This is the timestamp when the payout is anticipated to be sent to Earthport. This matches the supplied anticipatedPayoutRequestTime request attribute but the value returned will be in UTC (zero offset) dateTime. Therefore, a value supplied as 2013-01-20T12:30:00-05:00 will be returned as the UTC equivalent of 2013-01-20T17:30:00+00:00.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Service level can be standard or express: will match the value supplied in the service request, or default to 'standard' where no service level has been supplied.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "expectedSettlementDate",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. This is an indicative date when the payout instruction is expected to be settled to the bank.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"isBankAccountValid\": true,\n    \"anticipatedPayoutRequestTime\": \"2018-12-14T23:00:00+00:00\",\n    \"serviceLevel\": \"standard\",\n    \"expectedSettlementDate\": \"2018-12-17Z\"\n}"
    },
    {
      "Name": "Quotes Response",
      "ImplementationType": "Structure",
      "Description": "This represents a response of an FX Quote request. This contains a fxTicketID, which is a UID generated by EarthPort. The fxTicketID has an exchange rate which is honoured for a  specified duration. This UID should be presented in Payout Request if required.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "987654321",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 9999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxTicketID",
          "Description": "fxTicketID is the unique number within the Earthport System representing the FX Quote presented to the Merchant. This is represented as an FX Ticket ID in Payment Request. Payout Request's specified with the optional FX Ticket Id will be validated against TTL. The Earthport system will throw a validation error if TTL is expired.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "FXDetail",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxDetail",
          "Description": "FxDetail contains the sell amount, the buy amount and the fx rate on the ticket.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"fxTicketID\": 647159,\n    \"fxDetail\": {\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyAmount\": {\n            \"currency\": \"GBP\",\n            \"amount\": 822.47\n        },\n        \"fxRate\": {\n            \"sellCurrency\": \"EUR\",\n            \"buyCurrency\": \"GBP\",\n            \"rate\": 0.82247\n        }\n    }\n}"
    },
    {
      "Name": "BeneficiaryBankAccountField",
      "ImplementationType": "Structure",
      "Description": "Each beneficiaryBankAccountField would normally be displayed in the UI from left to right based on the tabOrder attribute. The beneficiaryBankAccountField element contains the attributes described below:-",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Enter the Account Number.",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Suggested roll-over or help text description to assist users.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "8",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "displaySize",
          "Description": "A suggested field size to display.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BeneficiaryBankAccountFieldInput",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "inputType",
          "Description": "Supported input types for a bank registration UI.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "en",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "locale",
          "Description": "The localisation setting of this particular record.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "8",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "maxSize",
          "Description": "Suggested client side syntactic validation rule.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "accountNumber",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "parameterName",
          "Description": "The name of the corresponding Earthport parameter to use when calling addBeneficiaryBankAcount.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "separator",
          "Description": "The separator to display following (to the right hand side) this field, usually '-' or '/'.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Account",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "subTitle",
          "Description": "If present contains a sub-label to be displayed with the field.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "3",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "tabOrder",
          "Description": "Indicates the ordering of this field in the UI.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "01876660",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "The current value of this field, populated by the getBeneficiaryBankAccount service.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryBankAccountListItems",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "listItems",
          "Description": "The beneficiaryBankAccountField contains optional listItem sub-elements. The listItem sub-elements would normally be present where the inputType attribute is 'list'.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n            \"description\": \"Enter the Account Number\",\r\n            \"displaySize\": 8,\r\n            \"inputType\": \"text\",\r\n            \"locale\": \"en\",\r\n            \"maxSize\": 8,\r\n            \"parameterName\": \"accountNumber\",\r\n            \"separator\": \" \",\r\n            \"subTitle\": \"Account\",\r\n            \"tabOrder\": 3\r\n          }"
    },
    {
      "Name": "LiquidityDepositTransaction",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "Financial transaction representing a deposit of liquidity (money) into a merchant account.",
      "Fields": [
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amountCreditedToMerchantAccount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds. This amount represents the amount of money recieved into the merchants account. This is expected to be the same as the financial transaction amount.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amountReceivedAtBank",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds. This amount represents the amount of money recieved on the statement line item. This may differ from amountCreditedToMerchantAccount due to charges or FX.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositCountry",
          "Description": "Valid supported ISO 3166 2-character country code. This represents the Country of liquidity deposit.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositDate",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. This represents the date of liquidity deposit.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "44EPT1234549",
          "Attributes": {
            "MinimumLength": 5,
            "MaximumLength": 12
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositReference",
          "Description": "A Merchant User Deposit Reference.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "FXExecutedRate",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxExecutedDetail",
          "Description": "Holds details of an executed FX conversion that has occured as part of a financial transaction. The FX that occured was from the sellCurrency to the buyCurrency at a particular rate. The rate may have been requested via an FX Quote (fxTicketID). An FX conversion fee may have been applied to certain transaction types.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "unappliedReason",
          "Description": "The reason the deposit was not applied to the merchant's virtual account.",
          "DefaultValue": ""
        }
      ],
      "Discriminator": "",
      "DiscriminatorValue": "Merchant Liquidity Deposit",
      "ExampleValue": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474988435000\n    },\n    \"timestamp\": \"2018-05-18T11:14:05.169+00:00\",\n    \"transactionType\": \"Merchant Liquidity Deposit\",\n    \"amount\": {\n        \"amount\": 20000,\n        \"currency\": \"GBP\"\n    },\n    \"movementType\": \"Credit\",\n    \"statementDetails\": [\n        {\n            \"key\": \"TransactionNarrative\",\n            \"value\": \"Test liquidity deposit in GBP\"\n        }\n    ],\n    \"depositDate\": \"2018-05-18Z\",\n    \"depositCountry\": \"GB\",\n    \"amountCreditedToMerchantAccount\": {\n        \"amount\": 20000,\n        \"currency\": \"GBP\"\n    },\n    \"amountReceivedAtBank\": {\n        \"amount\": 20000,\n        \"currency\": \"GBP\"\n    }\n}"
    },
    {
      "Name": "TransactionHold",
      "ImplementationType": "Structure",
      "Description": "Parameter to prevent transactions from being processed until the desired time has been reached. Note releaseDateTime must be in UTC format.",
      "Fields": [
        {
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "100",
          "Attributes": {
            "Minimum": 0.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "offsetMinutes",
          "Description": "This is the time in minutes to hold the transaction until.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "releaseDateTime",
          "Description": "This is used when you want to provide a specific timestamp to hold the transaction until. A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Transactions Search Response",
      "ImplementationType": "Structure",
      "Description": "This represents the response of Transactions Search. It contains a number of transactions which match the search criteria and details of pagination on resultset.",
      "Fields": [
        {
          "Optional": true,
          "Type": "FinancialTransaction",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "transactions",
          "Description": "Represents a transaction. This can any type of transaction among Payout transaction, Refund transaction, User deposit, Liquidity deposit, Journal transaction, Merchant liquidity movement and Earthport Merchant Liquidity Transfer.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PaginationResult",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "paginationResult",
          "Description": "This returns a paged set of results rather than the full result set.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Quotes Request",
      "ImplementationType": "Structure",
      "Description": "This request is used to retrieve a cross rate between the required sell currency and buy currency.",
      "Fields": [
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellAmount",
          "Description": "Sell Amount is the liquidity amount the merchant is debited in order to buy the Buy Currency. For  a Payment Request this will often (but not necessarily) be the amount that the merchant wishes to be debited in. This represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Buy Currency is the currency the merchant wishes to buy or convert the sell currency into. For a Payment Request this must be one of the currencies registered for a Beneficiary Bank Account or Beneficiary Wallet, otherwise the Earthport system will throw a validation error.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyAmount",
          "Description": "Buy Amount is the monetary amount the merchant wishes to pay to the beneficiary. For a Payment Request this must be one of the currencies registered for a Beneficiary Bank Account or Beneficiary Wallet, otherwise the Earthport system will throw a validation error. This represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Sell Currency is the currency the merchant wishes to be debited in, in order to buy the Buy Amount.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": " {\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyCurrency\": \"GBP\",\n        \"serviceLevel\": \"standard\",\n        \"usersBankID\": {\n            \"userID\": {\n                \"epUserID\": \"3409890146942\"\n            },\n            \"benBankID\": {\n                \"epBankID\": \"4034215\"\n            }\n        }\n}\n"
    },
    {
      "Name": "TransactionType",
      "ImplementationType": "Enumeration",
      "Description": "Type of financial transaction",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Payout",
          "Description": "A financial transaction representing a payout from an account held in the EPS system.",
          "DefaultValue": "Payout"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Refund",
          "Description": "A financial transaction representing a refund (by a bank or other third-party) to the merchant's account.",
          "DefaultValue": "Refund"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "User Deposit",
          "Description": "A financial transaction representing money paid into a merchant's account by a user.",
          "DefaultValue": "User Deposit"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Merchant Liquidity Deposit",
          "Description": "Financial transaction representing a deposit of liquidity (money) into a merchant account.",
          "DefaultValue": "Merchant Liquidity Deposit"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Earthport to Merchant Liquidity Transfer",
          "Description": "Financial transaction representing the transfer of liquidity from an Earthport account to a Merchants Central account.",
          "DefaultValue": "Earthport to Merchant Liquidity Transfer"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Merchant Liquidity Movement",
          "Description": "A financial transaction representing movement of funds between a merchant's accounts held in the EPS system.",
          "DefaultValue": "Merchant Liquidity Movement"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Journal",
          "Description": "Financial transaction representing a journal entry against an account.",
          "DefaultValue": "Journal"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Generic Transaction",
          "Description": "A generic financial transaction used to represent different types of transactions in the EPS system that do not have their own specific mappings in the schema.",
          "DefaultValue": "Generic Transaction"
        }
      ]
    },
    {
      "Name": "StatementDetail",
      "ImplementationType": "Structure",
      "Description": "Set of key value pairs that provide additional detail about a money movement.",
      "Fields": [
        {
          "Optional": true,
          "Type": "AdditionalInformation",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "key",
          "Description": "Provides additional detail about a money movement",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "Value corresponding to the key",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryIdentityListItems",
      "ImplementationType": "Structure",
      "Description": "The beneficiaryIdentityField contains optional listItem sub-elements. The listItem sub-elements would normally be present where the inputType attribute is 'list'.",
      "Fields": [
        {
          "Optional": false,
          "Type": "BeneficiaryIdentityListItem",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "[\r\n    {\r\n      \"label\": \"Passport\",\r\n      \"value\": \"Passport\"\r\n    },\r\n    {\r\n      \"label\": \"National ID Card\",\r\n      \"value\": \"National ID Card\"\r\n    },\r\n    {\r\n      \"label\": \"Driving License\",\r\n      \"value\": \"Driving License\"\r\n    }\r\n  ]",
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryIdentityField",
          "Description": "List of beneficiary identity listItem sub-elements.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"beneficiaryIdentityField\": [\r\n    {\r\n      \"label\": \"Passport\",\r\n      \"value\": \"Passport\"\r\n    },\r\n    {\r\n      \"label\": \"National ID Card\",\r\n      \"value\": \"National ID Card\"\r\n    },\r\n    {\r\n      \"label\": \"Driving License\",\r\n      \"value\": \"Driving License\"\r\n    }\r\n  ]\r\n}"
    },
    {
      "Name": "BeneficiaryIdentityListItem",
      "ImplementationType": "Structure",
      "Description": "This is used to populate a beneficiary identity field which needs to be displayed as a list in the UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "label",
          "Description": "The visible label to be presented in the UI list.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "value",
          "Description": "The stored value for the visible list item label.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n  \"label\": \"Passport\",\n  \"value\": \"Passport\"\n}"
    },
    {
      "Name": "JournalTransaction",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "Financial transaction representing a journal entry against an account.",
      "Fields": [],
      "Discriminator": "",
      "DiscriminatorValue": "Journal",
      "ExampleValue": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474988435022\n    },\n    \"timestamp\": \"2018-05-18T16:03:09.719+00:00\",\n    \"transactionType\": \"Journal\",\n    \"amount\": {\n        \"amount\": 100,\n        \"currency\": \"GBP\"\n    },\n    \"movementType\": \"Credit\",\n    \"description\": \"test\"\n}"
    },
    {
      "Name": "Users Update Request",
      "ImplementationType": "Structure",
      "Description": "This request is used to update the identity associated with a payer/user.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerIdentity",
          "Description": "Represents the identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BenBankID",
      "ImplementationType": "Structure",
      "Description": "This group consists of all possible beneficiary bank identifier types. The 'epBankID' field is a unique identifier for a beneficiary bank account. The 'merchantBankID' is an optional merchant specified identifier for the beneficiary bank account. The 'epBankID', 'merchantBankID' or both 'epBankID' and 'merchantBankID' can be supplied. A mapping will be performed to retrieve the merchant bank ID from the supplied EP bank ID and vice versa. If both the 'epBankID' and 'merchantBankID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
      "Fields": [
        {
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "7428632",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 9999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "epBankID",
          "Description": "The unique ID of a beneficiary bank account.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "AAA1234BBB456",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantBankID",
          "Description": "The merchant specified ID for a beneficiary bank account.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n        \"epBankID\": 4034215,\n        \"merchantBankID\": \"bankID_1540304037951\"\n    }"
    },
    {
      "Name": "TransactionID",
      "ImplementationType": "Structure",
      "Description": "Transaction ID type which contains both the unique Earthport transaction ID and the merchant supplied transaction ID.",
      "Fields": [
        {
          "Optional": true,
          "Type": "Long",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "281474988431250",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 999999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "epTransactionID",
          "Description": "The payment ID generated by EPS.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "AAA987654321BBB",
          "Attributes": {
            "MinimumLength": 0,
            "MaximumLength": 255
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantTransactionID",
          "Description": "The unique reference of a transaction provided by the merchant.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "FXMethod",
      "ImplementationType": "Enumeration",
      "Description": "Method of FX that will be used to settle the payout request.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "no fx",
          "Description": "No FX Used.",
          "DefaultValue": "no fx"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "forward fx",
          "Description": "Forward FX Used.",
          "DefaultValue": "forward fx"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fx on receipt",
          "Description": "FX on receipt.",
          "DefaultValue": "fx on receipt"
        }
      ]
    },
    {
      "Name": "FXRate",
      "ImplementationType": "Structure",
      "Description": "Represents an FX rate between two currencies, the rate is restricted to 6 decimal places. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "rate",
          "Description": "It is the exchange rate at which the buy currency is exchanged into the sell currency. In other words it is the buyCurrency:SellCurrency conversation ratio.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Users Deposit References Request",
      "ImplementationType": "Structure",
      "Description": "Request object to add a deposit reference.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "44EPT1234549",
          "Attributes": {
            "MinimumLength": 5,
            "MaximumLength": 12
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositReference",
          "Description": "A Merchant User Deposit Reference.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryAmountInformation",
      "ImplementationType": "Structure",
      "Description": "Used to specify the beneficiary amount and the payout currency.",
      "Fields": [
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryAmount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "GrantType",
      "ImplementationType": "Enumeration",
      "Description": "OAuth2.0 grant type",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "client_credentials",
          "Description": "OAuth2.0 client credentials grant type",
          "DefaultValue": "client_credentials"
        }
      ]
    },
    {
      "Name": "MoneyMovementType",
      "ImplementationType": "Enumeration",
      "Description": "Specifies whether a money movement is a debit or credit.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Debit",
          "Description": "Debit type money movement.",
          "DefaultValue": "Debit"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "Credit",
          "Description": "Credit type money movement.",
          "DefaultValue": "Credit"
        }
      ]
    },
    {
      "Name": "FinancialTransactionStatus",
      "ImplementationType": "Structure",
      "Description": "Additional important status information for specific transaction types.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "Minimum": -2147483648.0,
            "Maximum": 2147483647.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "code",
          "Description": "Numerical code of financial transaction status.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Description of the financial transaction status",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "FXExecutedRate",
      "ImplementationType": "Structure",
      "Description": "Holds details of an executed FX conversion that has occured as part of a financial transaction. The FX that occured was from the sellCurrency to the buyCurrency at a particular rate. The rate may have been requested via an FX Quote (fxTicketID). An FX conversion fee may have been applied to certain transaction types.",
      "Fields": [
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxFeeAmount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "FXRate",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxRate",
          "Description": "Represents an FX rate between two currencies, the rate is restricted to 6 decimal places. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "FXTicketID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxTicketID",
          "Description": "The unique FX Ticket ID generated by the Earthport payment system.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Beneficiary Bank Account Validate Response",
      "ImplementationType": "Structure",
      "Description": "This is the response to the Validate Beneficiary Bank Account API. The response will contain the element 'isBankAccountValid' which is a boolean representing if the specified beneficiary bank account is valid.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "true",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "isBankAccountValid",
          "Description": "This is a boolean field that represents if the specified beneficiary bank account is valid.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "FXDetail",
      "ImplementationType": "Structure",
      "Description": "Represents the details of an FX transaction, encapsulating the sellAmount, buyAmount and fxRate into a single type.",
      "Fields": [
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyAmount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "FXRate",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxRate",
          "Description": "Represents an FX rate between two currencies, the rate is restricted to 6 decimal places. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellAmount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Quotes Indicative Request",
      "ImplementationType": "Structure",
      "Description": "This request is used to retrieve an indicative FX rate between the required sell currency and buy currency.",
      "Fields": [
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellAmount",
          "Description": "Sell Amount is the liquidity amount the merchant is debited in order to buy the Buy Currency. For a Payment Request this will often (but not necessarily) be the amount that the merchant wishes to be debited in. This represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Buy Currency is the currency the merchant wishes to buy or convert the sell currency into. For a Payment Request this must be one of the currencies registered for a Beneficiary Bank Account, otherwise the Earthport system will throw a validation error.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyAmount",
          "Description": "Buy Amount is the monetary amount the merchant wishes to pay to the beneficiary. For a Payment Request this must be one of the currencies registered for a Beneficiary Bank Account, otherwise the Earthport system will throw a validation error. This represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Sell Currency is the currency the merchant wishes to be debited in, in order to buy the Buy Amount.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n        \"sellAmount\": {\n            \"currency\": \"EUR\",\n            \"amount\": 1000\n        },\n        \"buyCurrency\": \"GBP\",\n        \"serviceLevel\": \"standard\"\n}"
    },
    {
      "Name": "Action",
      "ImplementationType": "Enumeration",
      "Description": "Used when you have to perform a specific action on a resource. e.g. validate",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "validate",
          "Description": "validate a resource(currently used for 'user' resource only)",
          "DefaultValue": "validate"
        }
      ]
    },
    {
      "Name": "StatementLineItem",
      "ImplementationType": "Structure",
      "Description": "A statement line item is a financial transaction that affects the balance of an account.",
      "Fields": [
        {
          "Optional": false,
          "Type": "FinancialTransaction",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transaction",
          "Description": "Represents a financial transaction",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "100",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "balance",
          "Description": "Decimal amount value. The number of decimal places is defined by the currency.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BulkFXDetail",
      "ImplementationType": "Structure",
      "Description": "represents the list of fxRates and their details.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Represents Sell Currency for which FxRate was found.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code. Represents Buy Currency for which FxRate was found.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyCountry",
          "Description": "Valid supported ISO 3166 2-character country code. Buy Country is the country of the Beneficiary Bank where the merchant wishes to buy or convert the sell currency.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Represents Service Level for which FxRate was found.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "0.77067",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "buyFxRate",
          "Description": "Represents the FX rate between two currencies that will be applied during a buy direction trade – buying x amount of beneficiary currency (buyCurrency). The rate is restricted to 6 decimal places.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Precision",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "1.297572",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "sellFxRate",
          "Description": "Represents the FX rate between two currencies that will be effective during a sell direction trade – selling x amount of payout instruction currency (sellCurrency). The rate is restricted to 6 decimal places.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "FXTicketID",
      "ImplementationType": "Structure",
      "Description": "The unique FX Ticket ID generated by the Earthport payment system.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "987654321",
          "Attributes": {
            "Minimum": 0.0,
            "Maximum": 9999999999999.0,
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "ticketID",
          "Description": "The ticket ID of an FX Quote.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "PaginationResult",
      "ImplementationType": "Structure",
      "Description": "This returns a paged set of results rather than the full result set.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "offset",
          "Description": "0-based starting offset of the page with respect to the entire resultset.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "pageSize",
          "Description": "Number of items per page to return. If empty the maximum allowable (25) number of records will be returned.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Number",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "totalNumberOfRecords",
          "Description": "Total number of records in full result set.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryBankAccountSummary",
      "ImplementationType": "Structure",
      "Description": "Represents a summary of a bank account. This type masks sensitive account information such as Account Numbers and IBANs.",
      "Fields": [
        {
          "Optional": true,
          "Type": "BenBankID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "benBankID",
          "Description": "This group consists of all possible beneficiary bank identifier types. The 'epBankID' field is a unique identifier for a beneficiary bank account. The 'merchantBankID' is an optional merchant specified identifier for the beneficiary bank account. The 'epBankID', 'merchantBankID' or both 'epBankID' and 'merchantBankID' can be supplied. A mapping will be performed to retrieve the merchant bank ID from the supplied EP bank ID and vice versa. If both the 'epBankID' and 'merchantBankID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Bank Account Description",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Type which defines a beneficiary bank account description. Each bank account must be given a description therefore this is a mandatory component of the BeneficiaryBankAccount complex type.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "Valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BankAccountDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bankAccountDetails",
          "Description": "The bank account details such as accountName, bankName, accountNumber etc...The list of bank account fields vary by country.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "ACTIVE",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "status",
          "Description": "Status of the bank account.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n            \"benBankID\": {\n                \"epBankID\": 4034215,\n                \"merchantBankID\": \"bankID_1540304037951\"\n            },\n            \"description\": \"Bank Account Description\",\n            \"countryCode\": \"GB\",\n            \"bankAccountDetails\": [\n                {\n                    \"key\": \"bankName\",\n                    \"value\": \"Test Bank\"\n                },\n                {\n                    \"key\": \"accountName\",\n                    \"value\": \"account name\"\n                },\n                {\n                    \"key\": \"currencyCode\",\n                    \"value\": \"GBP\"\n                },\n                {\n                    \"key\": \"accountNumber\",\n                    \"value\": \"****0093\"\n                }\n            ],\n            \"status\": \"ACTIVE\"\n        }"
    },
    {
      "Name": "Beneficiary Bank Account Validate Request",
      "ImplementationType": "Structure",
      "Description": "The beneficiary bank account Object that needs to be validated.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentity",
          "Description": "Represents the identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Bank Account Description",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Type which defines a beneficiary bank account description. Each bank account must be given a description therefore this is a mandatory component.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "The territory in which this bank account is domiciled is mandatory and must be supplied in the 'countryCode' field as a valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "The currency held in this bank account may optionally be supplied in the 'currencyCode' field as a valid supported ISO 4217 3-character currency code. If not supplied it will assume the default currency of the 'countryCode' parameter.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BankAccountDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bankAccountDetails",
          "Description": "This is a group of sub-elements which collectively identify both the bank and the account within the bank.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"beneficiaryIdentity\": {\n      \"individualIdentity\": {\n        \"name\": {\n          \"familyName\": \"Smith\",\n          \"givenNames\": \"John\"\n        }\n      }\n    },\n    \"description\": \"Bank Account Description\",\n    \"countryCode\": \"GB\",\n    \"currencyCode\": \"GBP\",\n    \"bankAccountDetails\": [\n      {\n        \"key\": \"accountNumber\",\n        \"value\": \"06970093\"\n      },\n      {\n        \"key\": \"accountName\",\n        \"value\": \"account name\"\n      },\n      {\n        \"key\": \"bankName\",\n        \"value\": \"Test Bank\"\n      },\n      {\n        \"key\": \"sortCode\",\n        \"value\": \"800554\"\n      }\n    ]\n}"
    },
    {
      "Name": "UserDepositTransaction",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "A financial transaction representing money paid into a merchant's account by a user.",
      "Fields": [
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of all possible user identifier types. The 'epUserID' field is a unique identifier for a merchant and is the equivalent of a Virtual Account Number (VAN). The 'merchantUserID' is a merchant specified identifier for an individual or company that an account was set up for. The 'epUserID', 'merchantUserID' or both 'epUserID' and 'merchantUserID' can be supplied. A mapping will be performed to retrieve the merchant user ID from the supplied EP user ID and vice versa. If both the 'epUserID' and 'merchantUserID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositDate",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "44EPT1234549",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositReference",
          "Description": "A Merchant User Deposit Reference.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "depositCountry",
          "Description": "Valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amountDepositedByUser",
          "Description": "This is the amount deposited by the user. Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amountDepositedToMerchant",
          "Description": "This is the amount deposited to the merchant. Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "FXExecutedRate",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxExecutedDetail",
          "Description": "Holds details of an executed FX conversion that has occured as part of a financial transaction. The FX that occured was from the sellCurrency to the buyCurrency at a particular rate. The rate may have been requested via an FX Quote (fxTicketID). An FX conversion fee may have been applied to certain transaction types.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "unappliedReason",
          "Description": "The reason the deposit was not applied to the merchant's virtual account.",
          "DefaultValue": ""
        }
      ],
      "Discriminator": "",
      "DiscriminatorValue": "User Deposit",
      "ExampleValue": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474988435002\n    },\n    \"timestamp\": \"2018-05-18T11:14:06.136+00:00\",\n    \"transactionType\": \"User Deposit\",\n    \"amount\": {\n        \"amount\": 500,\n        \"currency\": \"GBP\"\n    },\n    \"movementType\": \"Credit\",\n    \"statementDetails\": [\n        {\n            \"key\": \"TransactionNarrative\",\n            \"value\": \"Test User deposit in GBP\"\n        }\n    ],\n    \"userID\": {\n        \"epUserID\": 3430090148263,\n        \"merchantUserID\": \"acTest_00175112daaad_na\"\n    },\n    \"depositDate\": \"2018-05-18Z\",\n    \"depositCountry\": \"GB\",\n    \"unappliedReason\": \"NULL\",\n    \"amountDepositedByUser\": {\n        \"amount\": 500,\n        \"currency\": \"GBP\"\n    },\n    \"amountDepositedToMerchant\": {\n        \"amount\": 500,\n        \"currency\": \"GBP\"\n    }\n}"
    },
    {
      "Name": "GetPayoutRequiredDataForCountryCurrency",
      "ImplementationType": "Structure",
      "Fields": [
        {
          "Optional": true,
          "Type": "IdentityEntity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentityEntity",
          "Description": "Supported identity entity types.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "Valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "Valid supported ISO 4217 3-character currency code.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 50
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "locale",
          "Description": "Supports a comma separated list of locales. for example en_GB, en_US in order of preferred locale.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "Supported service levels for a payout request (standard or express).",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Payments Create Response",
      "ImplementationType": "Structure",
      "Description": "Response object to the payout request APIs.",
      "Fields": [
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of all possible user identifier types. The 'epUserID' field is a unique identifier for a merchant and is the equivalent of a Virtual Account Number (VAN). The 'merchantUserID' is a merchant specified identifier for an individual or company that an account was set up for. The 'epUserID', 'merchantUserID' or both 'epUserID' and 'merchantUserID' can be supplied. A mapping will be performed to retrieve the merchant user ID from the supplied EP user ID and vice versa. If both the 'epUserID' and 'merchantUserID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BenBankID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "benBankID",
          "Description": "This group consists of all possible beneficiary bank identifier types. The 'epBankID' field is a unique identifier for a beneficiary bank account. The 'merchantBankID' is an optional merchant specified identifier for the beneficiary bank account. The 'epBankID', 'merchantBankID' or both 'epBankID' and 'merchantBankID' can be supplied. A mapping will be performed to retrieve the merchant bank ID from the supplied EP bank ID and vice versa. If both the 'epBankID' and 'merchantBankID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "TransactionID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "Transaction ID type which contains both the unique Earthport transaction ID and the merchant supplied transaction ID.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "correspondentChargesExpected",
          "Description": "A flag to indicate if correspondent charges are expected during the processing of the payout request.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "liquidityValue",
          "Description": "The liquidity value debited to service the payout request. It represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "settlementValue",
          "Description": "The settlement value that will be sent by instruction to the settlement bank. This value may be subject to charges applied by correspondent banks before being received by the beneficiary bank account. This will typically match the currency of the beneficiary bank account, unless this instruction will be settled using FX on receipt.It represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "feeValue",
          "Description": "The fee that was applied during the processing of the payout request. It represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "FXMethod",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxMethodExpected",
          "Description": "Method of FX that will be used to settle the payout request.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "FXRate",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "fxRate",
          "Description": "Represents a foreign exchange rate used during a specific transaction. It represents an FX rate between two currencies, the rate is restricted to 6 decimal places. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "acceptedDate",
          "Description": "A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm. This is the timestamp when the payout instruction was accepted by the system.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "expectedSettlementDate",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. This is an Indicative date when the payout instruction is expected to be settled to the bank. This is calculated taking into account such things as acceptedDate, the settlement agreement cut-off time and period, etc. It currently does not take into account individual countries' banking calendars.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"userID\": {\n        \"epUserID\": 3409890147399,\n        \"merchantUserID\": \"userID_1543060156380\"\n    },\n    \"benBankID\": {\n        \"epBankID\": 4036790,\n        \"merchantBankID\": \"bankID_1543060156380\"\n    },\n    \"transactionID\": {\n        \"epTransactionID\": 281474984546286,\n        \"merchantTransactionID\": \"txID_1543060156380\"\n    },\n    \"liquidityValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"settlementValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"acceptedDate\": \"2018-11-24T11:49:24.313+00:00\",\n    \"expectedSettlementDate\": \"2018-11-26Z\"\n}"
    },
    {
      "Name": "BeneficiaryIdentityGroupsList",
      "ImplementationType": "Structure",
      "Description": "This type defines a list of identity data groups. Each group is normally represented as a section of fields on the UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "groupLabel",
          "Description": "Label for the beneficiary identity fields.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryIdentityGroup",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryIdentityFieldGroup",
          "Description": "List of field groupings to define the beneficiary identity.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BeneficiaryIdentityFieldGroupChoice",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryIdentityFieldGroupChoice",
          "Description": "Conditional sets of field groupings to define the beneficiary identity. i.e. this could present a list of beneficiary identity fields for an individual and also the list of beneficiary identity fields for a legal entity.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\"groupLabel\":\"Individual Identity\",\"beneficiaryIdentityFieldGroup\":[{\"elementName\":\"name\",\"groupLabel\":\"Enter name\",\"mandatory\":\"true\",\"beneficiaryIdentityFieldsList\":{\"beneficiaryIdentityField\":[{\"description\":\"Enter the first name of the beneficiary\",\"displaySize\":35,\"elementName\":\"givenNames\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":1024,\"subTitle\":\"The first name of the beneficiary\",\"tabOrder\":1},{\"description\":\"Enter the family name of the beneficiary\",\"displaySize\":35,\"elementName\":\"familyName\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":1024,\"subTitle\":\"The family name of the beneficiary\",\"tabOrder\":2}]}},{\"elementName\":\"address\",\"groupLabel\":\"Enter address details\",\"mandatory\":\"false\",\"beneficiaryIdentityFieldsList\":{\"beneficiaryIdentityField\":[{\"description\":\"Enter the first line of address of beneficiary\",\"displaySize\":35,\"elementName\":\"addressLine1\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":254,\"subTitle\":\"First line of address of beneficiary\",\"tabOrder\":3},{\"description\":\"Enter the second line of address of beneficiary\",\"displaySize\":35,\"elementName\":\"addressLine2\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"false\",\"maxSize\":254,\"subTitle\":\"Second line of address of beneficiary\",\"tabOrder\":4},{\"description\":\"Enter the third line of address of beneficiary\",\"displaySize\":35,\"elementName\":\"addressLine3\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"false\",\"maxSize\":254,\"subTitle\":\"Third line of address of beneficiary\",\"tabOrder\":5},{\"description\":\"Enter the city of residency of beneficiary\",\"displaySize\":35,\"elementName\":\"city\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":254,\"subTitle\":\"City of residency of beneficiary\",\"tabOrder\":6},{\"description\":\"Enter the province of residency of beneficiary\",\"displaySize\":35,\"elementName\":\"province\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"false\",\"maxSize\":254,\"subTitle\":\"Province of residency of beneficiary\",\"tabOrder\":7},{\"description\":\"Enter the postcode of residency of beneficiary\",\"displaySize\":10,\"elementName\":\"postcode\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"false\",\"maxSize\":10,\"subTitle\":\"Postcode of residency of beneficiary\",\"tabOrder\":8},{\"description\":\"Enter the ISO county code of residency of beneficiary\",\"displaySize\":2,\"elementName\":\"country\",\"inputType\":\"text\",\"locale\":\"en\",\"mandatory\":\"true\",\"maxSize\":2,\"subTitle\":\"ISO county of residency of beneficiary\",\"tabOrder\":9}]}}]}"
    },
    {
      "Name": "SettlementCalendar",
      "ImplementationType": "Structure",
      "Description": "Represents the cut-off time for a specific settlement date.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "submitBy",
          "Description": "A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm. Represents settlement cut-off time.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "forValueOn",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. Represents settlement date.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryBankAccountFieldInput",
      "ImplementationType": "Enumeration",
      "Description": "Supported input types for a bank registration UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "text",
          "Description": "Text UI field.",
          "DefaultValue": "text"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "list",
          "Description": "List UI field.",
          "DefaultValue": "list"
        }
      ]
    },
    {
      "Name": "AccessTokenResponse",
      "ImplementationType": "Structure",
      "Description": "The OAuth 2.0 access token to be used in each subsequent API call.",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "BearerToken",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "token_type",
          "Description": "Type of token.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "1527848421789",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "issued_at",
          "Description": "Time the token was issued. This is milliseconds since epoch.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "WrtMv7jKAxJGPnq50q00qUKzpRYZ",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "access_token",
          "Description": "The actual token which needs to be used to authorize each subsequent API request.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "299",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "expires_in",
          "Description": "When this token expires in seconds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "approved",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "status",
          "Description": "The status of the token.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"token_type\": \"BearerToken\",\n    \"issued_at\": \"1543070211759\",\n    \"access_token\": \"8mYaXTpV3kNz0TXypU4rEkVdZqMH\",\n    \"expires_in\": \"2999\",\n    \"status\": \"approved\"\n}"
    },
    {
      "Name": "TransactionID_Merchant",
      "ImplementationType": "Structure",
      "Description": "This group consists of merchant transaction reference only.",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "AAA987654321BBB",
          "Attributes": {
            "MinimumLength": 0,
            "MaximumLength": 255
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantTransactionID",
          "Description": "The unique reference of a transaction provided by the merchant.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryBankAccountGroup",
      "ImplementationType": "Structure",
      "Description": "This type defines a bank account data group. Each group is normally represented as a row on the UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Account Number",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "groupLabel",
          "Description": "The UI text to display as a name for this row.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "true",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "mandatory",
          "Description": "Indicates whether values must be supplied in the fields of this group.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BeneficiaryBankAccountFieldsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryBankAccountFieldsList",
          "Description": "This type defines a bank account field.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BenBankID_Merchant",
      "ImplementationType": "Structure",
      "Description": "This group consists of merchant beneficiary bank identifier only.",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "\"bnk_12345678\"",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantBankID",
          "Description": "The merchant specified ID for a beneficiary bank account.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"merchantBankID\": \"bnk_12345678\"\r\n}"
    },
    {
      "Name": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "Minimum set of data that constitutes a financial transaction.",
      "Fields": [
        {
          "Optional": false,
          "Type": "TransactionID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "Transaction ID type which contains both the unique Earthport transaction ID and the merchant supplied transaction ID.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "timestamp",
          "Description": "A timestamp of the transaction. A valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "FinancialTransactionStatus",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionStatus",
          "Description": "Additional important status information for specific transaction types.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "amount",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds. This represents the transaction amount.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MoneyMovementType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "movementType",
          "Description": "Specifies whether a money movement is a debit or credit.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "StatementDetail",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "statementDetails",
          "Description": "Set of key value pairs that provide additional details about a money movement.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "A reason or description or narrative as entered against the journal entry.",
          "DefaultValue": ""
        }
      ],
      "Discriminator": "transactionType",
      "DiscriminatorValue": "Transaction"
    },
    {
      "Name": "BeneficiaryBankAccountListItems",
      "ImplementationType": "Structure",
      "Description": "The beneficiaryBankAccountField contains optional listItem sub-elements. The listItem sub-elements would normally be present where the inputType attribute is 'list'.",
      "Fields": [
        {
          "Optional": false,
          "Type": "BeneficiaryBankAccountListItem",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "[{\"label\":\"Checking\",\"value\":\"1\"},{\"label\":\"Savings\",\"value\":\"2\"}]",
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryBankAccountField",
          "Description": "List of beneficiary Bank Account Field values",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryAdditionalData",
      "ImplementationType": "Structure",
      "Description": "Represents a set of name value pairs that can be supplied with the Identity information. The keys will be validated on the server side against a list of valid types that are accepted. Both the key and the value are required if adding additional data.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "additionalDataKey",
          "Description": "The length of the additionalDataKey field is currently restricted to 50 bytes.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "additionalDataValue",
          "Description": "The length of the additionalDataValue field is currently restricted to 1024.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "BeneficiaryIdentityFieldInput",
      "ImplementationType": "Enumeration",
      "Description": "Supported input types for a beneficiary identity UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "text",
          "Description": "Text UI field.",
          "DefaultValue": "text"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "date",
          "Description": "Date UI field.",
          "DefaultValue": "date"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "number",
          "Description": "Number UI field.",
          "DefaultValue": "number"
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "list",
          "Description": "List UI field.",
          "DefaultValue": "list"
        }
      ],
      "ExampleValue": ""
    },
    {
      "Name": "UserID",
      "ImplementationType": "Structure",
      "Description": "This group consists of all possible user identifier types. The 'epUserID' field is the Earthport generated unique identifier for a User and is the equivalent of a Virtual Account Number (VAN). The 'merchantUserID' is a merchant specified identifier for the User. The 'epUserID', 'merchantUserID' or both 'epUserID' and 'merchantUserID' can be supplied. A mapping will be performed to retrieve the merchant user ID from the supplied EP user ID and vice versa. If both the 'epUserID' and 'merchantUserID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
      "Fields": [
        {
          "Optional": true,
          "Type": "Long",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "epUserID",
          "Description": "user’s unique id generated by EarthPort. This is also called the VAN (Virtual Account Number).",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantUserID",
          "Description": "A unique reference for the merchant that identifies the person or company on behalf of which this account was set up. This needs to be used to reference KYC data held by the merchant (amongst other things). This is often a unique username or reference allocated by the merchant at user registration time.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"epUserID\": 3409890146942,\r\n  \"merchantUserID\": \"userID_1540303323210\"\r\n}"
    },
    {
      "Name": "UserID_Merchant",
      "ImplementationType": "Structure",
      "Description": "This group consists of merchant user identifier only.",
      "Fields": [
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "AAA222BBB333CCC",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 100
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "merchantUserID",
          "Description": "A unique reference for the merchant that identifies the person or company on behalf of which this account was set up. This needs to be used to reference KYC data held by the merchant (amongst other things). This is often a unique username or reference allocated by the merchant at user registration time.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "UsersBankID",
      "ImplementationType": "Structure",
      "Description": "This group consists of a collection of both the user ID group and beneficiary bank ID group. The 'userID' is a collection of user identifier types. The 'benBankID' is a collection of account identifier types. Both the 'userID' and 'benBankID' fields are mandatory.",
      "Fields": [
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of all possible user identifier types. The 'epUserID' field is a unique identifier for a merchant and is the equivalent of a Virtual Account Number (VAN). The 'merchantUserID' is a merchant specified identifier for an individual or company that an account was set up for. The 'epUserID', 'merchantUserID' or both 'epUserID' and 'merchantUserID' can be supplied. A mapping will be performed to retrieve the merchant user ID from the supplied EP user ID and vice versa. If both the 'epUserID' and 'merchantUserID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BenBankID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "benBankID",
          "Description": "This group consists of all possible beneficiary bank identifier types. The 'epBankID' field is a unique identifier for a beneficiary bank account. The 'merchantBankID' is an optional merchant specified identifier for the beneficiary bank account. The 'epBankID', 'merchantBankID' or both 'epBankID' and 'merchantBankID' can be supplied. A mapping will be performed to retrieve the merchant bank ID from the supplied EP bank ID and vice versa. If both the 'epBankID' and 'merchantBankID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"userID\": {\n        \"epUserID\": 3409890147363,\n        \"merchantUserID\": \"userID_1542991954199\"\n    },\n    \"benBankID\": {\n        \"epBankID\": 4036783,\n        \"merchantBankID\": \"bankID_1542991974172\"\n    }\n}"
    },
    {
      "Name": "Users Get Response",
      "BaseType": "",
      "ImplementationType": "Structure",
      "Description": "This response contains the PayerIdentity data including address, birth data, identification and additional elements as appropriate depending on if it is a company or an individuals identity.",
      "Fields": [
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "Represents the UIDs for the User - both the Earthport User ID and the merchant User ID.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerIdentity",
          "Description": "Represents the payer identity of an individual or legal entity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Date",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "createdDate",
          "Description": "The Date the User was created.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"userID\": {\n        \"epUserID\": 3409890146942,\n        \"merchantUserID\": \"userID_1540303323210\"\n    },\n    \"payerIdentity\": {\n        \"individualIdentity\": {\n            \"name\": {\n                \"familyName\": \"Smith\",\n                \"givenNames\": \"John\"\n            },\n            \"address\": {\n                \"addressLine1\": \"1 Main Street\",\n                \"addressLine2\": \"Address2\",\n                \"addressLine3\": \"Address3\",\n                \"city\": \"London\",\n                \"country\": \"GB\",\n                \"postcode\": \"EC1A 4HY\"\n            }\n          }\n    },      \n    \"createdDate\": \"2018-10-23\"\n}"
    },
    {
      "Name": "PurposeOfPaymentCode",
      "ImplementationType": "Structure",
      "Description": "This contains a specific Purpose of Payment option, consisting of a code and a human readable description.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "SAL",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "code",
          "Description": "Earthport purpose of payment code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Salary/payroll",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Description of purpose of payment code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "PurposeOfPaymentUsageRestrictions",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "purposeOfPaymentUsageRestrictions",
          "Description": "Usage restrictions apply where a specified code is only acceptable for a given type of payer or beneficiary. This attribute indicates whether the code can be used for Individuals and/or Legal Entities, for both payer and beneficiary parties. Additional field specifications identify further data that is required, given the chosen Purpose of Payment.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "AdditionalFieldWithValues",
      "ImplementationType": "Structure",
      "Description": "Indicates the additional key that can be provided in the payoutDetails section of a payout request along with an indication of whether this additional payout details entry is mandatory. This will also be followed by a series of 'fieldValues' that list the valid codes and descriptions that can be submitted as the value of the payoutDetail entry in the payout request.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "key",
          "Description": "Key for the 'additionalFieldWithValues' data field.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "label",
          "Description": "Label for the 'additionalFieldWithValues' data field.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "mandatory",
          "Description": "Is the 'additionalFieldWithValues' data field?",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "FieldValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "fieldValue",
          "Description": "Value for the 'additionalFieldWithValues' data field.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "PayoutTransaction",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Description": "A financial transaction representing a payout from an account held in the EPS system.",
      "Fields": [
        {
          "Optional": false,
          "Type": "UsersBankID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "usersBankID",
          "Description": "This group consists of a collection of both the user ID group and beneficiary bank ID group. The 'userID' is a collection of user identifier types. The 'benBankID' is a collection of account identifier types. Both the 'userID' and 'benBankID' fields are mandatory.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutRequestAmount",
          "Description": "Monetary amount and currency of the original payout request.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "settlementInstructionAmount",
          "Description": "Monetary amount and currency of the settled payment.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryStatementNarrative",
          "Description": "Narrative text to be displayed on the beneficiary bank accounts statement, where the banking network supports this.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PayoutDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "payoutDetails",
          "Description": "Allows additional data to be supplied with a payout. Refer to documentation for valid keys.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "expectedSettlementDate",
          "Description": "Indicative date when the payout instruction is expected to be settled to the bank. This is calculated taking into account such things as acceptedDate, the settlement agreement cut-off time and period, etc. It currently does not take into account individual countries' banking calendars.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryBankCountry",
          "Description": "Country of the target beneficiary bank.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryBankCurrency",
          "Description": "Currency of the target beneficiary bank account.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "debitValueDate",
          "Description": "Timestamp when the payout instruction was accepted by the Earthport payment system.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerIdentity",
          "Description": "Identity information of the payer.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerCreatedDate",
          "Description": "Date payer was created.",
          "DefaultValue": ""
        }
      ],
      "Discriminator": "",
      "DiscriminatorValue": "Payout",
      "ExampleValue": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474988440111,\n        \"merchantTransactionID\": \"txID_1532520105368\"\n    },\n    \"timestamp\": \"2018-07-25T12:01:46.254+00:00\",\n    \"transactionType\": \"Payout\",\n    \"transactionStatus\": {\n        \"code\": 100,\n        \"description\": \"Pending Processing\"\n    },\n    \"amount\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"movementType\": \"Debit\",\n    \"usersBankID\": {\n        \"userID\": {\n            \"epUserID\": 3430090151306,\n            \"merchantUserID\": \"userID_1532520072742\"\n        },\n        \"benBankID\": {\n            \"epBankID\": 7430956,\n            \"merchantBankID\": \"bankID_1532520087364\"\n        }\n    },\n    \"payoutRequestAmount\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"settlementInstructionAmount\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"beneficiaryStatementNarrative\": \"Free Text Description\",\n    \"expectedSettlementDate\": \"2018-11-30Z\",\n    \"beneficiaryBankCountry\": \"GB\",\n    \"beneficiaryBankCurrency\": \"GBP\",\n    \"debitValueDate\": \"2018-07-25T12:01:46.254+00:00\",\n    \"payerIdentity\": {\n        \"individualIdentity\": {\n            \"name\": {\n                \"familyName\": \"Smith\",\n                \"givenNames\": \"John\"\n            },\n            \"address\": {\n                \"addressLine1\": \"ABC\",\n                \"addressLine2\": \"ABC\",\n                \"addressLine3\": \"ABC\",\n                \"city\": \"ABC\",\n                \"country\": \"GB\",\n                \"postcode\": \"EC1A 4HY\",\n                \"province\": \"ABC\"\n            },\n            \"birthInformation\": {\n                \"cityOfBirth\": \"ABC\",\n                \"countryOfBirth\": \"GB\",\n                \"dateOfBirth\": \"2001-01-01Z\"\n            },\n            \"identification\": [\n                {\n                    \"idType\": \"Passport\",\n                    \"identificationCountry\": \"GB\",\n                    \"identificationNumber\": \"ABC123\",\n                    \"validFromDate\": \"2001-01-01Z\",\n                    \"validToDate\": \"2001-01-01Z\"\n                }\n            ]\n        }\n    },\n    \"payerCreatedDate\": \"2018-07-25Z\"\n}"
    },
    {
      "Name": "AdditionalFieldWithValidator",
      "ImplementationType": "Structure",
      "Description": "Indicates an additional key that can be provided in the payoutDetails section of a payout request, along with an indication of whether this additional payout details is mandatory. Also includes the validation expression that will be applied to the value. This is a regular expression, and may be blank if no validation will be applied.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "key",
          "Description": "Key for list option.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "label",
          "Description": "Label for list option.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "mandatory",
          "Description": "Indicates whether this additional payout details is mandatory.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "validation",
          "Description": "The validation expression that will be applied to the value. This is a regular expression, and may be blank if no validation will be applied.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "AdditionalFieldsList",
      "ImplementationType": "Structure",
      "Description": "This optionally contains a list of additional data that may be required if the associated purpose of payment is selected. This section will list a selection of 'additionalFieldWithValues' and/or 'additionalFieldWithValidator':   'additionalFieldWithValues' indicates the additional key that can be provided in the payoutDetails section of a payout request along with an indication of whether this additional payout details entry is mandatory. 'additionalFieldWithValues' will also be followed by a series of 'fieldValues' that list the valid codes and descriptions that can be submitted as the value of the payoutDetail entry in the payout request. 'additionalFieldWithValidator' indicates an additional key that can be provided in the payoutDetails section of a payout request, along with an indication of whether this additional payout details is mandatory 'additionalFieldWithValidator' also includes the validation expression that will be applied to the value. This is a regular expression, and may be blank if no validation will be applied.",
      "Fields": [
        {
          "Optional": true,
          "Type": "AdditionalFieldWithValidator",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "additionalFieldWithValidator",
          "Description": "Indicates an additional key that can be provided in the payoutDetails section of a payout request, along with an indication of whether this additional payout details is mandatory.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "AdditionalFieldWithValues",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "additionalFieldWithValues",
          "Description": "Indicates the additional key that can be provided in the payoutDetails section of a payout request along with an indication of whether this additional payout details entry is mandatory.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Beneficiary Bank Account List Response",
      "ImplementationType": "Structure",
      "Description": "This type gives a summary of all the Beneficiary Bank Accounts. This is used by customers to list all of the active beneficiary bank accounts within the system for the specified UserID (epUserID or merchantUserID). Note that summary bank account details mask sensitive account information such as account numbers and IBANs.",
      "Fields": [
        {
          "Optional": false,
          "Type": "BeneficiaryBankAccountSummary",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryBankAccountSummary",
          "Description": "Bank account summary returned in the list beneficiary bank accounts service. The summary version of a bank account does not include the beneficiary identity details. It also masks or obfuscates sensitive data such as account numbers.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of all possible user identifier types. The 'epUserID' field is a unique identifier for a merchant and is the equivalent of a Virtual Account Number (VAN). The 'merchantUserID' is a merchant specified identifier for an individual or company that an account was set up for. The 'epUserID', 'merchantUserID' or both 'epUserID' and 'merchantUserID' can be supplied. A mapping will be performed to retrieve the merchant user ID from the supplied EP user ID and vice versa. If both the 'epUserID' and 'merchantUserID' are supplied, a check will be performed to ensure that the two are mapped. If the two provided fields are not mapped, then a validation error code will be returned. At least one of the fields must be populated.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "PaginationResult",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "paginationResult",
          "Description": "This returns a paged set of results rather than the full result set.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"beneficiaryBankAccountSummary\": [\n        {\n            \"benBankID\": {\n                \"epBankID\": 4034215,\n                \"merchantBankID\": \"bankID_1540304037951\"\n            },\n            \"description\": \"Bank Account Description\",\n            \"countryCode\": \"GB\",\n            \"bankAccountDetails\": [\n                {\n                    \"key\": \"bankName\",\n                    \"value\": \"Test Bank\"\n                },\n                {\n                    \"key\": \"accountName\",\n                    \"value\": \"account name\"\n                },\n                {\n                    \"key\": \"currencyCode\",\n                    \"value\": \"GBP\"\n                },\n                {\n                    \"key\": \"accountNumber\",\n                    \"value\": \"****0093\"\n                }\n            ],\n            \"status\": \"ACTIVE\"\n        },\n        {\n            \"benBankID\": {\n                \"epBankID\": 4034220,\n                \"merchantBankID\": \"bankID_1540313198252\"\n            },\n            \"description\": \"Bank Account Description\",\n            \"countryCode\": \"FR\",\n            \"bankAccountDetails\": [\n                {\n                    \"key\": \"bankName\",\n                    \"value\": \"Test Bank\"\n                },\n                {\n                    \"key\": \"accountName\",\n                    \"value\": \"sdsd\"\n                },\n                {\n                    \"key\": \"currencyCode\",\n                    \"value\": \"EUR\"\n                },\n                {\n                    \"key\": \"iban\",\n                    \"value\": \"***********************8822\"\n                }\n            ],\n            \"status\": \"ACTIVE\"\n        },\n        {\n            \"benBankID\": {\n                \"epBankID\": 4034221,\n                \"merchantBankID\": \"bankID_1540313268420\"\n            },\n            \"description\": \"Bank Account Description\",\n            \"countryCode\": \"US\",\n            \"bankAccountDetails\": [\n                {\n                    \"key\": \"bankName\",\n                    \"value\": \"Test Bank\"\n                },\n                {\n                    \"key\": \"accountName\",\n                    \"value\": \"sdsd\"\n                },\n                {\n                    \"key\": \"currencyCode\",\n                    \"value\": \"USD\"\n                },\n                {\n                    \"key\": \"accountNumber\",\n                    \"value\": \"******0893\"\n                }\n            ],\n            \"status\": \"ACTIVE\"\n        }\n    ],\n    \"userID\": {\n        \"epUserID\": 3409890146942,\n        \"merchantUserID\": \"userID_1540303323210\"\n    },\n    \"paginationResult\": {\n        \"offset\": 0,\n        \"pageSize\": 25,\n        \"totalNumberOfRecords\": 3\n    }\n}"
    },
    {
      "Name": "BankAccount",
      "ImplementationType": "Structure",
      "Description": "The beneficiary bank account Object. This type provides all the possible information required to identify a beneficiary bank account.",
      "Fields": [
        {
          "Optional": true,
          "Type": "BenBankID_Merchant",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "benBankID",
          "Description": "This group consists of merchant beneficiary bank identifier only.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentity",
          "Description": "Represents the identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Bank Account Description",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Type which defines a beneficiary bank account description. Each bank account must be given a description therefore this is a mandatory component.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "The territory in which this bank account is domiciled. This is a valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "Valid supported ISO 4217 3-character currency code. The currency held in this bank account may optionally be supplied. If not supplied it will assume the default currency of the 'countryCode' parameter.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BankAccountDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bankAccountDetails",
          "Description": "This group holds the key-value pair of all possible account identifiers.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"benBankID\": {\r\n    \"merchantBankID\": \"bankID_12345678\"\r\n  },\r\n  \"beneficiaryIdentity\": {\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"ABC\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      }\r\n    }\r\n  },\r\n  \"description\": \"J Smith current account\",\r\n  \"countryCode\": \"GB\",\r\n  \"currencyCode\": \"GBP\",\r\n  \"bankAccountDetails\": [\r\n    {\r\n      \"key\": \"accountNumber\",\r\n      \"value\": \"06970093\"\r\n    },\r\n    {\r\n      \"key\": \"accountName\",\r\n      \"value\": \"Mr. John Smith\"\r\n    },\r\n    {\r\n      \"key\": \"bankName\",\r\n      \"value\": \"Test Bank\"\r\n    },\r\n    {\r\n      \"key\": \"sortCode\",\r\n      \"value\": \"800554\"\r\n    }\r\n  ]\r\n}"
    },
    {
      "Name": "ValidationException",
      "BaseType": "",
      "ImplementationType": "Exception",
      "Description": "Earthport custom validation exception to handle validation errors. This will be the structure of the payload for various HTTP 4xx errors.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2018-07-19T10:22:15.529+00:00",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "timeOfFailure",
          "Description": "Timestamp of the failure.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "failureType",
          "Description": "Type of failure - will always be validation.",
          "DefaultValue": "validation"
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Beneficiary Bank Account failed validation process",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "shortMsg",
          "Description": "Short descriptive message of the error.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "BeneficiaryBankAccount has failed validation",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "longMsg",
          "Description": "More descriptive message of the error.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Long",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "12000",
          "Attributes": {
            "ExclusiveMaximum": false,
            "ExclusiveMinimum": false
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "code",
          "Description": "An Earthport specific error code.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "1TWZLQGL9ZQUQ",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "uniqueErrorID",
          "Description": "An Earthport generated unique error ID.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Failure",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "failures",
          "Description": "An array of validation failures. For instance, if this error is during the creation or validation of a bank account, then each failure could relate to each individual bank account field validation error.",
          "DefaultValue": ""
        }
      ],
      "Discriminator": "",
      "DiscriminatorValue": "",
      "ExampleValue": "{\r\n  \"timeOfFailure\": \"2018-07-19T10:22:15.529+00:00\",\r\n  \"failureType\": \"validation\",\r\n  \"shortMsg\": \"Beneficiary Bank Account failed validation process\",\r\n  \"longMsg\": \"BeneficiaryBankAccount has failed validation\",\r\n  \"code\": 12000,\r\n  \"uniqueErrorID\": \"1TWZLQGL9ZQUQ\",\r\n  \"failures\": \r\n    [\r\n      {\r\n        \"key\": \"bankAccountDetails.bankName\",\r\n        \"code\": 12041,\r\n        \"value\": \"Beneficiary Bank Name not supplied\"\r\n      },\r\n      {\r\n        \"key\": \"bankAccountDetails.sortCode\",\r\n        \"code\": 12201,\r\n        \"value\": \"Beneficiary Bank Account Sort Code supplied is too long\"\r\n      }\r\n    ]\r\n}"
    },
    {
      "Name": "PurposeOfPaymentUsageRestrictions",
      "ImplementationType": "Structure",
      "Description": "Usage restrictions apply where a specified code is only acceptable for a given type of payer or beneficiary. This attribute indicates whether the code can be used for Individuals and/or Legal Entities, for both payer and beneficiary parties. Additional field specifications identify further data that is required, given the chosen Purpose of Payment.",
      "Fields": [
        {
          "Optional": true,
          "Type": "AdditionalFieldsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "additionalFieldsList",
          "Description": "Additional fields will be one of two types; free text or list options. 'additionalFieldWithValues' gives a list of acceptable responses. 'additionalFieldWithValidator' is a free text response.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "IdentityRestriction",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\n  \"individual\": true,\n  \"legalEntity\": true\n}",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryType",
          "Description": "Indicates whether this purpose of payment code is valid if the beneficiary is an individual or legal entity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "IdentityRestriction",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\n                        \"individual\": true,\n                        \"legalEntity\": true\n                    }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "originatorType",
          "Description": "Indicates whether this purpose of payment code is valid if the originator is an individual or legal entity.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Payments RegisteredBeneficiary Create Respone",
      "BaseType": "",
      "ImplementationType": "Structure",
      "Description": "Response object to Create Payment Registered Beneficiary",
      "Fields": [
        {
          "Optional": false,
          "Type": "TransactionID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionID",
          "Description": "This contains both the merchant transaction ID and the Earthport transaction iD.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "correspondentChargesExpected",
          "Description": "A flag to indicate if correspondent charges are expected during the processing of the payout request.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "liquidityValue",
          "Description": "The liquidity value debited to service the payout request. This is equivalent to the payout instruction amount.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "settlementValue",
          "Description": "The settlement value that will be sent by instruction to the settlement bank. This value may be subject to charges applied by correspondent banks before being received by the beneficiary bank account. This will typically match the currency of the beneficiary bank account, unless this instruction will be settled using FX on receipt.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "acceptedDate",
          "Description": "Timestamp when the payout instruction was accepted by the system. (This is known as - and is the same as - the debit value date in the Payout Transaction Detail Type).",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "expectedSettlementDate",
          "Description": "Indicative date when the payout instruction is expected to be settled to the bank. This is calculated taking into account such things as acceptedDate, the settlement agreement cut-off time and period, etc. It currently does not take into account individual countries' banking calendars.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n    \"transactionID\": {\n        \"epTransactionID\": 281474984546300,\n        \"merchantTransactionID\": \"txID_1543152891155\"\n    },\n    \"correspondentChargesExpected\": false,\n    \"liquidityValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"settlementValue\": {\n        \"amount\": 11,\n        \"currency\": \"GBP\"\n    },\n    \"acceptedDate\": \"2018-11-25T13:34:51.647+00:00\",\n    \"expectedSettlementDate\": \"2018-11-26Z\"\n}"
    },
    {
      "Name": "BeneficiaryIdentityGroup",
      "ImplementationType": "Structure",
      "Description": "This type defines a beneficiary identity data group. Each group is normally represented as a section of fields on the UI. 'groupLabel' is the UI test to display as a name for this section. 'mandatory' indicates whether all section is mandatory. 'elementName' is the name of the element in the addBeneficiaryBankAccount request document for the corresponding section.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "elementName",
          "Description": "The name of the Earthport element/enum in the addBeneficiaryBankAccount.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "groupLabel",
          "Description": "Displays a label for this group of identity fields.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Boolean",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "mandatory",
          "Description": "Indicates that all the fields within the group are mandatory.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BeneficiaryIdentityFieldsList",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentityFieldsList",
          "Description": "A list of identity fields to be displayed within this group.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"elementName\": \"name\",\r\n  \"groupLabel\": \"Enter name\",\r\n  \"mandatory\": true,\r\n  \"beneficiaryIdentityFieldsList\": {\r\n    \"beneficiaryIdentityField\": [\r\n      {\r\n        \"description\": \"Enter the first name of the beneficiary\",\r\n        \"displaySize\": 35,\r\n        \"elementName\": \"givenNames\",\r\n        \"inputType\": \"text\",\r\n        \"locale\": \"en\",\r\n        \"mandatory\": \"true\",\r\n        \"maxSize\": 1024,\r\n        \"subTitle\": \"The first name of the beneficiary\",\r\n        \"tabOrder\": 1\r\n      },\r\n      {\r\n        \"description\": \"Enter the family name of the beneficiary\",\r\n        \"displaySize\": 35,\r\n        \"elementName\": \"familyName\",\r\n        \"inputType\": \"text\",\r\n        \"locale\": \"en\",\r\n        \"mandatory\": \"true\",\r\n        \"maxSize\": 1024,\r\n        \"subTitle\": \"The family name of the beneficiary\",\r\n        \"tabOrder\": 2\r\n      }\r\n    ]\r\n  }\r\n}"
    },
    {
      "Name": "BeneficiaryBankAccountGroupsList",
      "ImplementationType": "Structure",
      "Description": "This type defines a list of bank account data groups. Each group is normally represented as a row on the UI.",
      "Fields": [
        {
          "Optional": false,
          "Type": "BeneficiaryBankAccountGroup",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "beneficiaryBankAccountFieldGroup",
          "Description": "List of beneficiary bank account groups.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "RefundTransaction",
      "BaseType": "FinancialTransaction",
      "ImplementationType": "Structure",
      "Fields": [
        {
          "Optional": false,
          "Type": "UserID",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "userID",
          "Description": "This group consists of all possible user identifier types."
        }
      ],
      "Discriminator": "",
      "DiscriminatorValue": "Refund"
    },
    {
      "Name": "IndividualIdentity",
      "ImplementationType": "Structure",
      "Description": "The identity of an individual. The 'name' attribute is mandatory for an individual. You must supply at least identification entry or one birth information entry or one address entry.",
      "Fields": [
        {
          "Optional": false,
          "Type": "IndividualName",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "name",
          "Description": "The 'givenNames' attribute is mandatory. This is a space separated list of names (not including the family name).\n\nYou should supply names and not initials (wherever possible). See examples below.\n\nThe 'familyName' attribute is mandatory. This contains the single family name. See examples below.\n\n\n*Example1 - a western citizen from a country which uses the common western naming convention(such as US, GB, FR, CA, DE etc...)*\n\n    Name = \"John Michael Smith\",\n\n    givenNames=\"John Michael\" and familyName=\"Smith\"\n\n\n*Example2 - a citizen from a country which uses the eastern name order where the family name comes first, followed by their given names (such as Hungary, China, Japan, Korea, Singapore, Taiwan, Vietnam etc...)*\n\n    Name = \"Máo Zédÿng\",\n\n    givenNames=\"Zédÿng\" and familyName=\"Máo\"\n\n\n    Name = \"Hidetoshi Nakata\",\n\n    givenNames=\"Nakata\" and familyName=\"Hidetoshi\"\n\n\n    Name = \"Ferenc Puskás\",\n\n    givenNames=\"Puskás\" and familyName=\"Ferenc\"\n\n\n*Example3 - middle east names*\n\n    Name= \"Mohammed bin Rashid bin Saeed Al-Maktoum\",\n\n    givenNames=\"Mohammed bin Rashid bin Saeed\" and familyName=\"Al-Maktoum\"\n\n\n*Example4 - single names, such as in Indonesia*\n\n    Name=\"Suharto\",\n\n    givenNames=\"Suharto\" and familyName=\"Suharto\".",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Address",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "address",
          "Description": "Represents an address. Mandatory attributes are 'addressLine1', 'city' and 'country'. All other attributes are optional.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "BirthInformation",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "birthInformation",
          "Description": "The group consists of elements that define birth information for an individual.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "Identification",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "identification",
          "Description": "This group consists of an individual identification unique number and the country of origin of the identification.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Address",
      "ImplementationType": "Structure",
      "Description": "Represents an address. Mandatory attributes are 'addressLine1', 'city' and 'country'. All other attributes are optional.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "20 Aldersgate St",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "addressLine1",
          "Description": "A line of address information. The length of this field is limited to 254 bytes. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Parkway",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "addressLine2",
          "Description": "A line of address information. The length of this field is limited to 254 bytes. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Barbican",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "addressLine3",
          "Description": "A line of address information. The length of this field is limited to 254 bytes. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "London",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "city",
          "Description": "A line of address information. The length of this field is limited to 254 bytes. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "country",
          "Description": "Valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "EC1A 4HY",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 10
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "postcode",
          "Description": "A line of address information. The length of this field is limited to 10 bytes. 10 bytes can hold 10 normal English characters. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Greater London",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "province",
          "Description": "A line of address information. The length of this field is limited to 254 bytes. This value will be truncated if it is too long.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Identification",
      "ImplementationType": "Structure",
      "Description": "This group consists of an individual identification type unique number and the country of origin of the identification. The idType will be a String value saying what the identification number relates to. This might be Passport. national ID card, driving licence or any other value. The idType will be validated against an enumeration to ensure it is of a valid type. Please refer to the \"API Solution Guide\" for further details. The identification number will normally be the equivalent of a passport number, but other types of identification can be used. The identification country will be the country that issued the identification number, so in the example that a passport number is provided as the identification number, the identification country will be the passport country origin.",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Passport",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "idType",
          "Description": "Enumeration of ID Types such as 'Passport', 'Driving License', 'National ID Card'. Please refer to the Earthport \"API Solution Guide\".",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "identificationCountry",
          "Description": "Valid supported ISO 3166 2-character country code. This represents the country of origin of the identification.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "ABC123",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 50
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "identificationNumber",
          "Description": "An identification number for an individual. For example, a passport number can be an identification number type. The length of this field is limited to 50 bytes. 50 bytes can hold 50 normal English characters. This value will be truncated if it is too long.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "validFromDate",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. This represents the valid-from date of the identification document.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "2001-01-01",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "validToDate",
          "Description": "Valid ISO 8601 date format YYYY-MM-DD. This represents the valid-to date of the identification document.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "IndividualName",
      "ImplementationType": "Structure",
      "Description": "The 'givenNames' attribute is mandatory. This is a space separated list of names (not including the family name).\n\nYou should supply names and not initials (wherever possible). See examples below.\n\nThe 'familyName' attribute is mandatory. This contains the single family name. See examples below.\n\n\n*Example1 - a western citizen from a country which uses the common western naming convention(such as US, GB, FR, CA, DE etc...)*\n\n    Name = \"John Michael Smith\",\n\n    givenNames=\"John Michael\" and familyName=\"Smith\"\n\n\n*Example2 - a citizen from a country which uses the eastern name order where the family name comes first, followed by their given names (such as Hungary, China, Japan, Korea, Singapore, Taiwan, Vietnam etc...)*\n\n    Name = \"Máo Zédÿng\",\n\n    givenNames=\"Zédÿng\" and familyName=\"Máo\"\n\n\n    Name = \"Hidetoshi Nakata\",\n\n    givenNames=\"Nakata\" and familyName=\"Hidetoshi\"\n\n\n    Name = \"Ferenc Puskás\",\n\n    givenNames=\"Puskás\" and familyName=\"Ferenc\"\n\n\n*Example3 - middle east names*\n\n    Name= \"Mohammed bin Rashid bin Saeed Al-Maktoum\",\n\n    givenNames=\"Mohammed bin Rashid bin Saeed\" and familyName=\"Al-Maktoum\"\n\n\n*Example4 - single names, such as in Indonesia*\n\n    Name=\"Suharto\",\n\n    givenNames=\"Suharto\" and familyName=\"Suharto\".",
      "Fields": [
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Smith",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 1024
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "familyName",
          "Description": "The family name component of an individual's identity. The length of this field is limited to 1024 bytes. 1024 bytes can hold 1024 normal English characters.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "John",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 1024
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "givenNames",
          "Description": "The given names component of an individual's identity. For detailed examples see documentation for type IndividualName. The length of this field is limited to 1024 bytes. 1024 bytes can hold 1024 normal English characters.",
          "DefaultValue": ""
        }
      ]
    },
    {
      "Name": "Bank Account Expected Settlement Request",
      "ImplementationType": "Structure",
      "Description": "This request can be used to determine whether a beneficiary bank account is deemed valid, and to obtain an expected settlement date for any\tpayout to this bank.",
      "Fields": [
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      }\r\n    }\r\n  }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentity",
          "Description": "Represents the identity of the beneficiary. You must specify one of either an individual identity or legal entity identity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "test",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Type which defines a beneficiary bank account description. Each bank account must be given a description therefore this is a mandatory component.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "The territory in which this bank account is domiciled is mandatory and must be supplied in the 'countryCode' field as a valid supported ISO 3166 2-character country code.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "The currency held in this bank account may optionally be supplied in the 'currencyCode' field as a valid supported ISO 4217 3-character currency code. If not supplied it will assume the default currency of the 'countryCode' parameter.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BankAccountDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "[\r\n    {\r\n      \"key\": \"accountName\",\r\n      \"value\": \"Mr J Doe\"\r\n    },\r\n    {\r\n      \"key\": \"accountNumber\",\r\n      \"value\": \"70872490\"\r\n    },\r\n    {\r\n      \"key\": \"bankName\",\r\n      \"value\": \"Natwest\"\r\n    },\r\n    {\r\n      \"key\": \"sortCode\",\r\n      \"value\": \"404784\"\r\n    }\r\n  ]",
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bankAccountDetails",
          "Description": "This is a group of sub-elements which collectively identify both the bank and the account within the bank.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payoutRequestCurrency",
          "Description": "Valid supported ISO 4217 3-character currency code of the payout request. Will default to the beneficiary bank currency if not supplied.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "\"2018-12-14T23:00:00.000Z\"",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "anticipatedPayoutRequestTime",
          "Description": "A valid ISO 8601 timestamp(YYYY-MM-DDThh:mm:ss.sss±hh:mm). This represents the timestamp when the payout is anticipated to be requested. This cannot be a time in the past. Recommendation is to supply the dateTime in UTC timezone or +0000 offset. Non zero offset times will be converted to UTC by the service. In this case, the client should ensure the supplied time is that intended for the supplied timezone or offset, and be aware this dateTime will be converted to UTC prior to expected settlement date calculation.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "{\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"ABC\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      }\r\n    }\r\n  }",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerIdentity",
          "Description": "Represents the identity of the payer. You must specify one of either an individual identity or legal entity identity.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "ServiceLevel",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "standard",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "serviceLevel",
          "Description": "This is one of the agreed service levels at the time of merchant registration. It could either be Standard or Express. Default is Standard.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PayerType",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "user",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "payerType",
          "Description": "The payerType is optional: if no value is specified then the default value of 'authenticatedCaller' will be used. If a payerType of 'user' is supplied then the associated payerIdentity details should be supplied.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "PayoutDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "payoutDetails",
          "Description": "PayoutDetails are used for key-value pairs of details supported by payouts. Refer to client guides for detailed list of valid keys.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "TransactionHold",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "transactionHold",
          "Description": "Transaction hold is optional. If not provided the transaction will be processeed as soon as possible.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\r\n  \"beneficiaryIdentity\": {\r\n      \"individualIdentity\": {\r\n        \"name\": {\r\n          \"familyName\": \"Smith\",\r\n          \"givenNames\": \"John\"\r\n        }\r\n      }\r\n    },\r\n            \"description\": \"test\",\r\n            \"countryCode\": \"GB\",\r\n            \"bankAccountDetails\": [\r\n                {\r\n                    \"key\": \"accountName\",\r\n                    \"value\": \"Mr J Doe\"\r\n                },\r\n                {\r\n                    \"key\": \"accountNumber\",\r\n                    \"value\": \"70872490\"\r\n                },\r\n                {\r\n                    \"key\": \"bankName\",\r\n                    \"value\": \"Natwest\"\r\n                },\r\n                {\r\n                    \"key\": \"sortCode\",\r\n                    \"value\": \"404784\"\r\n                }\r\n            ],\r\n        \"anticipatedPayoutRequestTime\": \"2018-12-14T23:00:00.000Z\",\r\n        \"payoutRequestCurrency\": \"GBP\",\r\n        \"serviceLevel\": \"standard\",\r\n        \"payerType\": \"user\",\r\n        \"payerIdentity\": {\r\n    \"individualIdentity\": {\r\n      \"name\": {\r\n        \"familyName\": \"Smith\",\r\n        \"givenNames\": \"John\"\r\n      },\r\n      \"address\": {\r\n        \"addressLine1\": \"ABC\",\r\n        \"addressLine2\": \"ABC\",\r\n        \"addressLine3\": \"ABC\",\r\n        \"city\": \"ABC\",\r\n        \"country\": \"GB\",\r\n        \"postcode\": \"EC1A 4HY\",\r\n        \"province\": \"ABC\"\r\n      }\r\n    }\r\n  }\r\n}"
    },
    {
      "Name": "AccountBalance",
      "ImplementationType": "Structure",
      "Description": "This element represents the balance of a merchant account or a managed merchant account in a currency registered with the merchant's central virtual account.",
      "Fields": [
        {
          "Optional": false,
          "Type": "MonetaryValue",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "balance",
          "Description": "Represents a monetary value containing a decimal amount value along with a currency code. The currency code is a three letter ISO 4217 code. E.g. GBP for British sterling pounds.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "balanceTimestamp",
          "Description": "The timestamp of when this balance was current at (This is most likely to be within milliseconds of the request time). This is a valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm.",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "5/15/2018 2:28:21 PM",
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "lastMovementTimestamp",
          "Description": "The timestamp of the last money movement on the customer’s account.This is a valid ISO 8601 timestamp, such as YYYY-MM-DDThh:mm:ss.sss±hh:mm.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n        \"balance\": {\n            \"currency\": \"GBP\",\n            \"amount\": -9643\n        },\n        \"balanceTimestamp\": \"2018-11-23T14:56:29.788+00:00\",\n        \"lastMovementTimestamp\": \"2018-11-23T07:55:32.049+00:00\"\n    }"
    },
    {
      "Name": "Beneficiary Bank Account Create Request",
      "ImplementationType": "Structure",
      "Description": "This request is used by customers to register a beneficiary bank account within the system. The beneficiary bank account is validated before creating it. If the  beneficiary bank account is a duplicate of one previously registered against the supplied UserID, the call simply returns the beneficiary bank account ID. Otherwise, a new beneficiary bank account is registered and the beneficiary bank account ID returned in the response.",
      "Fields": [
        {
          "Optional": true,
          "Type": "BenBankID_Merchant",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "benBankID",
          "Description": "This group consists of merchant beneficiary bank identifier only.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "Identity",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "beneficiaryIdentity",
          "Description": "Represents the beneficiary identity of an individual or legal entity. You must specify one of either an individual identity or legal entity identity or unstructured identity.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "Bank Account Description",
          "Attributes": {
            "MinimumLength": 1,
            "MaximumLength": 254
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "description",
          "Description": "Type which defines a beneficiary bank account description. Each bank account must be given a description therefore this is a mandatory component of the BeneficiaryBankAccount complex type.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GB",
          "Attributes": {
            "MinimumLength": 2,
            "MaximumLength": 2
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "countryCode",
          "Description": "Valid supported ISO 3166 2-character country code. This represents the territory in which this bank account is domiciled",
          "DefaultValue": ""
        },
        {
          "Optional": true,
          "Type": "String",
          "IsSdlNativeType": true,
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Example": "GBP",
          "Attributes": {
            "MinimumLength": 3,
            "MaximumLength": 3
          },
          "Nullable": false,
          "IsArray": false,
          "IsMap": false,
          "Name": "currencyCode",
          "Description": "Valid supported ISO 4217 3-character currency code. The currency held in this bank account may optionally be supplied in this field. If not supplied it will assume the default currency of the 'countryCode' parameter.",
          "DefaultValue": ""
        },
        {
          "Optional": false,
          "Type": "BankAccountDetails",
          "Constant": false,
          "IsStream": false,
          "IsAttribute": false,
          "Attributes": {},
          "ArrayAttributes": {
            "MinimumItems": 1,
            "UniqueItems": false
          },
          "Nullable": false,
          "IsArray": true,
          "IsMap": false,
          "Name": "bankAccountDetails",
          "Description": "It is a is a group of sub-elements which collectively identify both the bank and the account within the bank.",
          "DefaultValue": ""
        }
      ],
      "ExampleValue": "{\n  \"benBankID\":{ \"merchantBankID\": \"bnk_12345678\"},\n    \"beneficiaryIdentity\": {\n      \"individualIdentity\": {\n        \"name\": {\n          \"familyName\": \"Smith\",\n          \"givenNames\": \"John\"\n        }\n    }\n    },\n    \"description\": \"J Smith current account\",\n    \"countryCode\": \"GB\",\n    \"currencyCode\": \"GBP\",\n    \"bankAccountDetails\": [\n      {\n        \"key\": \"accountNumber\",\n        \"value\": \"06970093\"\n      },\n      {\n        \"key\": \"accountName\",\n        \"value\": \"Mr. J Smith\"\n      },\n      {\n        \"key\": \"bankName\",\n        \"value\": \"Barclays Bank\"\n      },\n      {\n        \"key\": \"sortCode\",\n        \"value\": \"800554\"\n      }\n    ]\n}"
    }
  ],
  "CodeGenSettings": {
    "SynchronyMode": "Synchronous",
    "ModelSerializationScheme": "Json",
    "ArraySerialization": "Indexed",
    "Nullify404": false,
    "UseHttpMethodPrefix": false,
    "UseModelPrefix": false,
    "UseExceptionPrefix": true,
    "UseEnumPrefix": true,
    "UseControllerPrefix": true,
    "UseConstructorsForConfig": false,
    "Timeout": 0.0,
    "AndroidUseAppManifest": false,
    "iOSUseAppInfoPlist": false,
    "iOSGenerateCoreData": false,
    "CollapseParamsToArray": false,
    "RunscopeEnabled": false,
    "AndroidHttpClient": "ANDROID_OK",
    "JavaHttpClient": "JAVA_OK",
    "ObjCHttpClient": "UNIREST",
    "CSharpHttpClient": "UNIREST",
    "NodeHttpClient": "NODE_REQUEST",
    "JavaPackageName": "com.earthport.api.client",
    "JavaGroupId": "com.earthport",
    "JavaUsePropertiesConfig": false,
    "PHPHttpClient": "UNIREST",
    "EnablePHPComposerVersionString": false,
    "PHPComposerPackageName": "earthport/api-client",
    "BrandLabel": "Earthport",
    "UserAgent": "earthport-sdk v{version} - {language}",
    "EnableGlobalUserAgent": true,
    "ProjectName": "rest-api-client",
    "EnableAdditionalModelProperties": false,
    "PreserveParameterOrder": true,
    "ValidateRequiredParameters": false,
    "AppendContentHeaders": true,
    "GenerateInterfaces": true,
    "UseCommonSDKLibrary": false,
    "ParameterArrayFormat": "ParamArrayWithIndex",
    "SecurityProtocols": [
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls",
      "Ssl3",
      "Tls"
    ],
    "GenerateTravisConfig": false,
    "GenerateCircleConfig": false,
    "GenerateAppveyorConfig": false,
    "GenerateJenkinsConfig": false,
    "EnableLogging": false,
    "EnableHttpCache": false,
    "Retries": 0,
    "RetryInterval": 1.0,
    "GenerateAdvancedDocs": true,
    "DisableDocs": false,
    "StoreTimezoneInformation": false,
    "UnderscoreNumbers": false,
    "UseSingletonPattern": true,
    "IgnoreIfNullJson": false,
    "DisableLinting": false,
    "SortResources": true,
    "LiftParameterDescriptionFromCustomType": false,
    "AllowSkippingSSLCertVerification": false,
    "ApplyCustomizations": [],
    "DoNotSplitWords": [],
    "ReturnCompleteHttpResponse": false
  },
  "Errors": [
    {
      "ErrorCode": 400,
      "ErrorMessage": "Bad request. Request message data did not pass validation.",
      "ErrorTypeName": "ValidationException"
    },
    {
      "ErrorCode": 401,
      "ErrorMessage": "Unauthorised. Not authorised to access requested data.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 403,
      "ErrorMessage": "Forbidden. Access to requested data is forbidden.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 404,
      "ErrorMessage": "Not Found. Requested resource does not exist.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 408,
      "ErrorMessage": "Timeout. Operation timed out.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 415,
      "ErrorMessage": "Unsupported media type. This is probably due to submitting incorrect data format. e.g. XML instead of JSON.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 429,
      "ErrorMessage": "Too many requests hit the API too quickly. We recommend an exponential backoff of your requests.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 500,
      "ErrorMessage": "Earthport server error.",
      "ErrorTypeName": ""
    },
    {
      "ErrorCode": 413,
      "ErrorMessage": "Request Entity Too Large. Earthport limits the request payload size to 100KB.",
      "ErrorTypeName": ""
    }
  ],
  "TestGenSettings": {
    "Configuration": {},
    "TestTimeout": 30,
    "PrecisionDelta": 0.01
  }
}